
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `MentorSkills` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model MentorSkills
 * 
 */
export type MentorSkillsModel = runtime.Types.Result.DefaultSelection<Prisma.$MentorSkillsPayload>

export type AggregateMentorSkills = {
  _count: MentorSkillsCountAggregateOutputType | null
  _min: MentorSkillsMinAggregateOutputType | null
  _max: MentorSkillsMaxAggregateOutputType | null
}

export type MentorSkillsMinAggregateOutputType = {
  id: string | null
  mentorId: string | null
  skillId: string | null
}

export type MentorSkillsMaxAggregateOutputType = {
  id: string | null
  mentorId: string | null
  skillId: string | null
}

export type MentorSkillsCountAggregateOutputType = {
  id: number
  mentorId: number
  skillId: number
  _all: number
}


export type MentorSkillsMinAggregateInputType = {
  id?: true
  mentorId?: true
  skillId?: true
}

export type MentorSkillsMaxAggregateInputType = {
  id?: true
  mentorId?: true
  skillId?: true
}

export type MentorSkillsCountAggregateInputType = {
  id?: true
  mentorId?: true
  skillId?: true
  _all?: true
}

export type MentorSkillsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which MentorSkills to aggregate.
   */
  where?: Prisma.MentorSkillsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MentorSkills to fetch.
   */
  orderBy?: Prisma.MentorSkillsOrderByWithRelationInput | Prisma.MentorSkillsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.MentorSkillsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MentorSkills from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MentorSkills.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned MentorSkills
  **/
  _count?: true | MentorSkillsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: MentorSkillsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: MentorSkillsMaxAggregateInputType
}

export type GetMentorSkillsAggregateType<T extends MentorSkillsAggregateArgs> = {
      [P in keyof T & keyof AggregateMentorSkills]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMentorSkills[P]>
    : Prisma.GetScalarType<T[P], AggregateMentorSkills[P]>
}




export type MentorSkillsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MentorSkillsWhereInput
  orderBy?: Prisma.MentorSkillsOrderByWithAggregationInput | Prisma.MentorSkillsOrderByWithAggregationInput[]
  by: Prisma.MentorSkillsScalarFieldEnum[] | Prisma.MentorSkillsScalarFieldEnum
  having?: Prisma.MentorSkillsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: MentorSkillsCountAggregateInputType | true
  _min?: MentorSkillsMinAggregateInputType
  _max?: MentorSkillsMaxAggregateInputType
}

export type MentorSkillsGroupByOutputType = {
  id: string
  mentorId: string
  skillId: string
  _count: MentorSkillsCountAggregateOutputType | null
  _min: MentorSkillsMinAggregateOutputType | null
  _max: MentorSkillsMaxAggregateOutputType | null
}

type GetMentorSkillsGroupByPayload<T extends MentorSkillsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<MentorSkillsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof MentorSkillsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], MentorSkillsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], MentorSkillsGroupByOutputType[P]>
      }
    >
  > 



export type MentorSkillsWhereInput = {
  AND?: Prisma.MentorSkillsWhereInput | Prisma.MentorSkillsWhereInput[]
  OR?: Prisma.MentorSkillsWhereInput[]
  NOT?: Prisma.MentorSkillsWhereInput | Prisma.MentorSkillsWhereInput[]
  id?: Prisma.StringFilter<"MentorSkills"> | string
  mentorId?: Prisma.StringFilter<"MentorSkills"> | string
  skillId?: Prisma.StringFilter<"MentorSkills"> | string
  mentor?: Prisma.XOR<Prisma.MentorScalarRelationFilter, Prisma.MentorWhereInput>
  skill?: Prisma.XOR<Prisma.SkillsScalarRelationFilter, Prisma.SkillsWhereInput>
}

export type MentorSkillsOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  mentorId?: Prisma.SortOrder
  skillId?: Prisma.SortOrder
  mentor?: Prisma.MentorOrderByWithRelationInput
  skill?: Prisma.SkillsOrderByWithRelationInput
}

export type MentorSkillsWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.MentorSkillsWhereInput | Prisma.MentorSkillsWhereInput[]
  OR?: Prisma.MentorSkillsWhereInput[]
  NOT?: Prisma.MentorSkillsWhereInput | Prisma.MentorSkillsWhereInput[]
  mentorId?: Prisma.StringFilter<"MentorSkills"> | string
  skillId?: Prisma.StringFilter<"MentorSkills"> | string
  mentor?: Prisma.XOR<Prisma.MentorScalarRelationFilter, Prisma.MentorWhereInput>
  skill?: Prisma.XOR<Prisma.SkillsScalarRelationFilter, Prisma.SkillsWhereInput>
}, "id">

export type MentorSkillsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  mentorId?: Prisma.SortOrder
  skillId?: Prisma.SortOrder
  _count?: Prisma.MentorSkillsCountOrderByAggregateInput
  _max?: Prisma.MentorSkillsMaxOrderByAggregateInput
  _min?: Prisma.MentorSkillsMinOrderByAggregateInput
}

export type MentorSkillsScalarWhereWithAggregatesInput = {
  AND?: Prisma.MentorSkillsScalarWhereWithAggregatesInput | Prisma.MentorSkillsScalarWhereWithAggregatesInput[]
  OR?: Prisma.MentorSkillsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.MentorSkillsScalarWhereWithAggregatesInput | Prisma.MentorSkillsScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"MentorSkills"> | string
  mentorId?: Prisma.StringWithAggregatesFilter<"MentorSkills"> | string
  skillId?: Prisma.StringWithAggregatesFilter<"MentorSkills"> | string
}

export type MentorSkillsCreateInput = {
  id?: string
  mentor: Prisma.MentorCreateNestedOneWithoutSkillsInput
  skill: Prisma.SkillsCreateNestedOneWithoutMentorSkillsInput
}

export type MentorSkillsUncheckedCreateInput = {
  id?: string
  mentorId: string
  skillId: string
}

export type MentorSkillsUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  mentor?: Prisma.MentorUpdateOneRequiredWithoutSkillsNestedInput
  skill?: Prisma.SkillsUpdateOneRequiredWithoutMentorSkillsNestedInput
}

export type MentorSkillsUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  mentorId?: Prisma.StringFieldUpdateOperationsInput | string
  skillId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type MentorSkillsCreateManyInput = {
  id?: string
  mentorId: string
  skillId: string
}

export type MentorSkillsUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
}

export type MentorSkillsUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  mentorId?: Prisma.StringFieldUpdateOperationsInput | string
  skillId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type MentorSkillsListRelationFilter = {
  every?: Prisma.MentorSkillsWhereInput
  some?: Prisma.MentorSkillsWhereInput
  none?: Prisma.MentorSkillsWhereInput
}

export type MentorSkillsOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type MentorSkillsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  mentorId?: Prisma.SortOrder
  skillId?: Prisma.SortOrder
}

export type MentorSkillsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  mentorId?: Prisma.SortOrder
  skillId?: Prisma.SortOrder
}

export type MentorSkillsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  mentorId?: Prisma.SortOrder
  skillId?: Prisma.SortOrder
}

export type MentorSkillsCreateNestedManyWithoutSkillInput = {
  create?: Prisma.XOR<Prisma.MentorSkillsCreateWithoutSkillInput, Prisma.MentorSkillsUncheckedCreateWithoutSkillInput> | Prisma.MentorSkillsCreateWithoutSkillInput[] | Prisma.MentorSkillsUncheckedCreateWithoutSkillInput[]
  connectOrCreate?: Prisma.MentorSkillsCreateOrConnectWithoutSkillInput | Prisma.MentorSkillsCreateOrConnectWithoutSkillInput[]
  createMany?: Prisma.MentorSkillsCreateManySkillInputEnvelope
  connect?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
}

export type MentorSkillsUncheckedCreateNestedManyWithoutSkillInput = {
  create?: Prisma.XOR<Prisma.MentorSkillsCreateWithoutSkillInput, Prisma.MentorSkillsUncheckedCreateWithoutSkillInput> | Prisma.MentorSkillsCreateWithoutSkillInput[] | Prisma.MentorSkillsUncheckedCreateWithoutSkillInput[]
  connectOrCreate?: Prisma.MentorSkillsCreateOrConnectWithoutSkillInput | Prisma.MentorSkillsCreateOrConnectWithoutSkillInput[]
  createMany?: Prisma.MentorSkillsCreateManySkillInputEnvelope
  connect?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
}

export type MentorSkillsUpdateManyWithoutSkillNestedInput = {
  create?: Prisma.XOR<Prisma.MentorSkillsCreateWithoutSkillInput, Prisma.MentorSkillsUncheckedCreateWithoutSkillInput> | Prisma.MentorSkillsCreateWithoutSkillInput[] | Prisma.MentorSkillsUncheckedCreateWithoutSkillInput[]
  connectOrCreate?: Prisma.MentorSkillsCreateOrConnectWithoutSkillInput | Prisma.MentorSkillsCreateOrConnectWithoutSkillInput[]
  upsert?: Prisma.MentorSkillsUpsertWithWhereUniqueWithoutSkillInput | Prisma.MentorSkillsUpsertWithWhereUniqueWithoutSkillInput[]
  createMany?: Prisma.MentorSkillsCreateManySkillInputEnvelope
  set?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
  disconnect?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
  delete?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
  connect?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
  update?: Prisma.MentorSkillsUpdateWithWhereUniqueWithoutSkillInput | Prisma.MentorSkillsUpdateWithWhereUniqueWithoutSkillInput[]
  updateMany?: Prisma.MentorSkillsUpdateManyWithWhereWithoutSkillInput | Prisma.MentorSkillsUpdateManyWithWhereWithoutSkillInput[]
  deleteMany?: Prisma.MentorSkillsScalarWhereInput | Prisma.MentorSkillsScalarWhereInput[]
}

export type MentorSkillsUncheckedUpdateManyWithoutSkillNestedInput = {
  create?: Prisma.XOR<Prisma.MentorSkillsCreateWithoutSkillInput, Prisma.MentorSkillsUncheckedCreateWithoutSkillInput> | Prisma.MentorSkillsCreateWithoutSkillInput[] | Prisma.MentorSkillsUncheckedCreateWithoutSkillInput[]
  connectOrCreate?: Prisma.MentorSkillsCreateOrConnectWithoutSkillInput | Prisma.MentorSkillsCreateOrConnectWithoutSkillInput[]
  upsert?: Prisma.MentorSkillsUpsertWithWhereUniqueWithoutSkillInput | Prisma.MentorSkillsUpsertWithWhereUniqueWithoutSkillInput[]
  createMany?: Prisma.MentorSkillsCreateManySkillInputEnvelope
  set?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
  disconnect?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
  delete?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
  connect?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
  update?: Prisma.MentorSkillsUpdateWithWhereUniqueWithoutSkillInput | Prisma.MentorSkillsUpdateWithWhereUniqueWithoutSkillInput[]
  updateMany?: Prisma.MentorSkillsUpdateManyWithWhereWithoutSkillInput | Prisma.MentorSkillsUpdateManyWithWhereWithoutSkillInput[]
  deleteMany?: Prisma.MentorSkillsScalarWhereInput | Prisma.MentorSkillsScalarWhereInput[]
}

export type MentorSkillsCreateNestedManyWithoutMentorInput = {
  create?: Prisma.XOR<Prisma.MentorSkillsCreateWithoutMentorInput, Prisma.MentorSkillsUncheckedCreateWithoutMentorInput> | Prisma.MentorSkillsCreateWithoutMentorInput[] | Prisma.MentorSkillsUncheckedCreateWithoutMentorInput[]
  connectOrCreate?: Prisma.MentorSkillsCreateOrConnectWithoutMentorInput | Prisma.MentorSkillsCreateOrConnectWithoutMentorInput[]
  createMany?: Prisma.MentorSkillsCreateManyMentorInputEnvelope
  connect?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
}

export type MentorSkillsUncheckedCreateNestedManyWithoutMentorInput = {
  create?: Prisma.XOR<Prisma.MentorSkillsCreateWithoutMentorInput, Prisma.MentorSkillsUncheckedCreateWithoutMentorInput> | Prisma.MentorSkillsCreateWithoutMentorInput[] | Prisma.MentorSkillsUncheckedCreateWithoutMentorInput[]
  connectOrCreate?: Prisma.MentorSkillsCreateOrConnectWithoutMentorInput | Prisma.MentorSkillsCreateOrConnectWithoutMentorInput[]
  createMany?: Prisma.MentorSkillsCreateManyMentorInputEnvelope
  connect?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
}

export type MentorSkillsUpdateManyWithoutMentorNestedInput = {
  create?: Prisma.XOR<Prisma.MentorSkillsCreateWithoutMentorInput, Prisma.MentorSkillsUncheckedCreateWithoutMentorInput> | Prisma.MentorSkillsCreateWithoutMentorInput[] | Prisma.MentorSkillsUncheckedCreateWithoutMentorInput[]
  connectOrCreate?: Prisma.MentorSkillsCreateOrConnectWithoutMentorInput | Prisma.MentorSkillsCreateOrConnectWithoutMentorInput[]
  upsert?: Prisma.MentorSkillsUpsertWithWhereUniqueWithoutMentorInput | Prisma.MentorSkillsUpsertWithWhereUniqueWithoutMentorInput[]
  createMany?: Prisma.MentorSkillsCreateManyMentorInputEnvelope
  set?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
  disconnect?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
  delete?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
  connect?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
  update?: Prisma.MentorSkillsUpdateWithWhereUniqueWithoutMentorInput | Prisma.MentorSkillsUpdateWithWhereUniqueWithoutMentorInput[]
  updateMany?: Prisma.MentorSkillsUpdateManyWithWhereWithoutMentorInput | Prisma.MentorSkillsUpdateManyWithWhereWithoutMentorInput[]
  deleteMany?: Prisma.MentorSkillsScalarWhereInput | Prisma.MentorSkillsScalarWhereInput[]
}

export type MentorSkillsUncheckedUpdateManyWithoutMentorNestedInput = {
  create?: Prisma.XOR<Prisma.MentorSkillsCreateWithoutMentorInput, Prisma.MentorSkillsUncheckedCreateWithoutMentorInput> | Prisma.MentorSkillsCreateWithoutMentorInput[] | Prisma.MentorSkillsUncheckedCreateWithoutMentorInput[]
  connectOrCreate?: Prisma.MentorSkillsCreateOrConnectWithoutMentorInput | Prisma.MentorSkillsCreateOrConnectWithoutMentorInput[]
  upsert?: Prisma.MentorSkillsUpsertWithWhereUniqueWithoutMentorInput | Prisma.MentorSkillsUpsertWithWhereUniqueWithoutMentorInput[]
  createMany?: Prisma.MentorSkillsCreateManyMentorInputEnvelope
  set?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
  disconnect?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
  delete?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
  connect?: Prisma.MentorSkillsWhereUniqueInput | Prisma.MentorSkillsWhereUniqueInput[]
  update?: Prisma.MentorSkillsUpdateWithWhereUniqueWithoutMentorInput | Prisma.MentorSkillsUpdateWithWhereUniqueWithoutMentorInput[]
  updateMany?: Prisma.MentorSkillsUpdateManyWithWhereWithoutMentorInput | Prisma.MentorSkillsUpdateManyWithWhereWithoutMentorInput[]
  deleteMany?: Prisma.MentorSkillsScalarWhereInput | Prisma.MentorSkillsScalarWhereInput[]
}

export type MentorSkillsCreateWithoutSkillInput = {
  id?: string
  mentor: Prisma.MentorCreateNestedOneWithoutSkillsInput
}

export type MentorSkillsUncheckedCreateWithoutSkillInput = {
  id?: string
  mentorId: string
}

export type MentorSkillsCreateOrConnectWithoutSkillInput = {
  where: Prisma.MentorSkillsWhereUniqueInput
  create: Prisma.XOR<Prisma.MentorSkillsCreateWithoutSkillInput, Prisma.MentorSkillsUncheckedCreateWithoutSkillInput>
}

export type MentorSkillsCreateManySkillInputEnvelope = {
  data: Prisma.MentorSkillsCreateManySkillInput | Prisma.MentorSkillsCreateManySkillInput[]
  skipDuplicates?: boolean
}

export type MentorSkillsUpsertWithWhereUniqueWithoutSkillInput = {
  where: Prisma.MentorSkillsWhereUniqueInput
  update: Prisma.XOR<Prisma.MentorSkillsUpdateWithoutSkillInput, Prisma.MentorSkillsUncheckedUpdateWithoutSkillInput>
  create: Prisma.XOR<Prisma.MentorSkillsCreateWithoutSkillInput, Prisma.MentorSkillsUncheckedCreateWithoutSkillInput>
}

export type MentorSkillsUpdateWithWhereUniqueWithoutSkillInput = {
  where: Prisma.MentorSkillsWhereUniqueInput
  data: Prisma.XOR<Prisma.MentorSkillsUpdateWithoutSkillInput, Prisma.MentorSkillsUncheckedUpdateWithoutSkillInput>
}

export type MentorSkillsUpdateManyWithWhereWithoutSkillInput = {
  where: Prisma.MentorSkillsScalarWhereInput
  data: Prisma.XOR<Prisma.MentorSkillsUpdateManyMutationInput, Prisma.MentorSkillsUncheckedUpdateManyWithoutSkillInput>
}

export type MentorSkillsScalarWhereInput = {
  AND?: Prisma.MentorSkillsScalarWhereInput | Prisma.MentorSkillsScalarWhereInput[]
  OR?: Prisma.MentorSkillsScalarWhereInput[]
  NOT?: Prisma.MentorSkillsScalarWhereInput | Prisma.MentorSkillsScalarWhereInput[]
  id?: Prisma.StringFilter<"MentorSkills"> | string
  mentorId?: Prisma.StringFilter<"MentorSkills"> | string
  skillId?: Prisma.StringFilter<"MentorSkills"> | string
}

export type MentorSkillsCreateWithoutMentorInput = {
  id?: string
  skill: Prisma.SkillsCreateNestedOneWithoutMentorSkillsInput
}

export type MentorSkillsUncheckedCreateWithoutMentorInput = {
  id?: string
  skillId: string
}

export type MentorSkillsCreateOrConnectWithoutMentorInput = {
  where: Prisma.MentorSkillsWhereUniqueInput
  create: Prisma.XOR<Prisma.MentorSkillsCreateWithoutMentorInput, Prisma.MentorSkillsUncheckedCreateWithoutMentorInput>
}

export type MentorSkillsCreateManyMentorInputEnvelope = {
  data: Prisma.MentorSkillsCreateManyMentorInput | Prisma.MentorSkillsCreateManyMentorInput[]
  skipDuplicates?: boolean
}

export type MentorSkillsUpsertWithWhereUniqueWithoutMentorInput = {
  where: Prisma.MentorSkillsWhereUniqueInput
  update: Prisma.XOR<Prisma.MentorSkillsUpdateWithoutMentorInput, Prisma.MentorSkillsUncheckedUpdateWithoutMentorInput>
  create: Prisma.XOR<Prisma.MentorSkillsCreateWithoutMentorInput, Prisma.MentorSkillsUncheckedCreateWithoutMentorInput>
}

export type MentorSkillsUpdateWithWhereUniqueWithoutMentorInput = {
  where: Prisma.MentorSkillsWhereUniqueInput
  data: Prisma.XOR<Prisma.MentorSkillsUpdateWithoutMentorInput, Prisma.MentorSkillsUncheckedUpdateWithoutMentorInput>
}

export type MentorSkillsUpdateManyWithWhereWithoutMentorInput = {
  where: Prisma.MentorSkillsScalarWhereInput
  data: Prisma.XOR<Prisma.MentorSkillsUpdateManyMutationInput, Prisma.MentorSkillsUncheckedUpdateManyWithoutMentorInput>
}

export type MentorSkillsCreateManySkillInput = {
  id?: string
  mentorId: string
}

export type MentorSkillsUpdateWithoutSkillInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  mentor?: Prisma.MentorUpdateOneRequiredWithoutSkillsNestedInput
}

export type MentorSkillsUncheckedUpdateWithoutSkillInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  mentorId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type MentorSkillsUncheckedUpdateManyWithoutSkillInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  mentorId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type MentorSkillsCreateManyMentorInput = {
  id?: string
  skillId: string
}

export type MentorSkillsUpdateWithoutMentorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  skill?: Prisma.SkillsUpdateOneRequiredWithoutMentorSkillsNestedInput
}

export type MentorSkillsUncheckedUpdateWithoutMentorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  skillId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type MentorSkillsUncheckedUpdateManyWithoutMentorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  skillId?: Prisma.StringFieldUpdateOperationsInput | string
}



export type MentorSkillsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  mentorId?: boolean
  skillId?: boolean
  mentor?: boolean | Prisma.MentorDefaultArgs<ExtArgs>
  skill?: boolean | Prisma.SkillsDefaultArgs<ExtArgs>
}, ExtArgs["result"]["mentorSkills"]>

export type MentorSkillsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  mentorId?: boolean
  skillId?: boolean
  mentor?: boolean | Prisma.MentorDefaultArgs<ExtArgs>
  skill?: boolean | Prisma.SkillsDefaultArgs<ExtArgs>
}, ExtArgs["result"]["mentorSkills"]>

export type MentorSkillsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  mentorId?: boolean
  skillId?: boolean
  mentor?: boolean | Prisma.MentorDefaultArgs<ExtArgs>
  skill?: boolean | Prisma.SkillsDefaultArgs<ExtArgs>
}, ExtArgs["result"]["mentorSkills"]>

export type MentorSkillsSelectScalar = {
  id?: boolean
  mentorId?: boolean
  skillId?: boolean
}

export type MentorSkillsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "mentorId" | "skillId", ExtArgs["result"]["mentorSkills"]>
export type MentorSkillsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  mentor?: boolean | Prisma.MentorDefaultArgs<ExtArgs>
  skill?: boolean | Prisma.SkillsDefaultArgs<ExtArgs>
}
export type MentorSkillsIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  mentor?: boolean | Prisma.MentorDefaultArgs<ExtArgs>
  skill?: boolean | Prisma.SkillsDefaultArgs<ExtArgs>
}
export type MentorSkillsIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  mentor?: boolean | Prisma.MentorDefaultArgs<ExtArgs>
  skill?: boolean | Prisma.SkillsDefaultArgs<ExtArgs>
}

export type $MentorSkillsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "MentorSkills"
  objects: {
    mentor: Prisma.$MentorPayload<ExtArgs>
    skill: Prisma.$SkillsPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    mentorId: string
    skillId: string
  }, ExtArgs["result"]["mentorSkills"]>
  composites: {}
}

export type MentorSkillsGetPayload<S extends boolean | null | undefined | MentorSkillsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$MentorSkillsPayload, S>

export type MentorSkillsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<MentorSkillsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: MentorSkillsCountAggregateInputType | true
  }

export interface MentorSkillsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MentorSkills'], meta: { name: 'MentorSkills' } }
  /**
   * Find zero or one MentorSkills that matches the filter.
   * @param {MentorSkillsFindUniqueArgs} args - Arguments to find a MentorSkills
   * @example
   * // Get one MentorSkills
   * const mentorSkills = await prisma.mentorSkills.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends MentorSkillsFindUniqueArgs>(args: Prisma.SelectSubset<T, MentorSkillsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__MentorSkillsClient<runtime.Types.Result.GetResult<Prisma.$MentorSkillsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one MentorSkills that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {MentorSkillsFindUniqueOrThrowArgs} args - Arguments to find a MentorSkills
   * @example
   * // Get one MentorSkills
   * const mentorSkills = await prisma.mentorSkills.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends MentorSkillsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, MentorSkillsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__MentorSkillsClient<runtime.Types.Result.GetResult<Prisma.$MentorSkillsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first MentorSkills that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MentorSkillsFindFirstArgs} args - Arguments to find a MentorSkills
   * @example
   * // Get one MentorSkills
   * const mentorSkills = await prisma.mentorSkills.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends MentorSkillsFindFirstArgs>(args?: Prisma.SelectSubset<T, MentorSkillsFindFirstArgs<ExtArgs>>): Prisma.Prisma__MentorSkillsClient<runtime.Types.Result.GetResult<Prisma.$MentorSkillsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first MentorSkills that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MentorSkillsFindFirstOrThrowArgs} args - Arguments to find a MentorSkills
   * @example
   * // Get one MentorSkills
   * const mentorSkills = await prisma.mentorSkills.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends MentorSkillsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, MentorSkillsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__MentorSkillsClient<runtime.Types.Result.GetResult<Prisma.$MentorSkillsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more MentorSkills that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MentorSkillsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all MentorSkills
   * const mentorSkills = await prisma.mentorSkills.findMany()
   * 
   * // Get first 10 MentorSkills
   * const mentorSkills = await prisma.mentorSkills.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const mentorSkillsWithIdOnly = await prisma.mentorSkills.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends MentorSkillsFindManyArgs>(args?: Prisma.SelectSubset<T, MentorSkillsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MentorSkillsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a MentorSkills.
   * @param {MentorSkillsCreateArgs} args - Arguments to create a MentorSkills.
   * @example
   * // Create one MentorSkills
   * const MentorSkills = await prisma.mentorSkills.create({
   *   data: {
   *     // ... data to create a MentorSkills
   *   }
   * })
   * 
   */
  create<T extends MentorSkillsCreateArgs>(args: Prisma.SelectSubset<T, MentorSkillsCreateArgs<ExtArgs>>): Prisma.Prisma__MentorSkillsClient<runtime.Types.Result.GetResult<Prisma.$MentorSkillsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many MentorSkills.
   * @param {MentorSkillsCreateManyArgs} args - Arguments to create many MentorSkills.
   * @example
   * // Create many MentorSkills
   * const mentorSkills = await prisma.mentorSkills.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends MentorSkillsCreateManyArgs>(args?: Prisma.SelectSubset<T, MentorSkillsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many MentorSkills and returns the data saved in the database.
   * @param {MentorSkillsCreateManyAndReturnArgs} args - Arguments to create many MentorSkills.
   * @example
   * // Create many MentorSkills
   * const mentorSkills = await prisma.mentorSkills.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many MentorSkills and only return the `id`
   * const mentorSkillsWithIdOnly = await prisma.mentorSkills.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends MentorSkillsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, MentorSkillsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MentorSkillsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a MentorSkills.
   * @param {MentorSkillsDeleteArgs} args - Arguments to delete one MentorSkills.
   * @example
   * // Delete one MentorSkills
   * const MentorSkills = await prisma.mentorSkills.delete({
   *   where: {
   *     // ... filter to delete one MentorSkills
   *   }
   * })
   * 
   */
  delete<T extends MentorSkillsDeleteArgs>(args: Prisma.SelectSubset<T, MentorSkillsDeleteArgs<ExtArgs>>): Prisma.Prisma__MentorSkillsClient<runtime.Types.Result.GetResult<Prisma.$MentorSkillsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one MentorSkills.
   * @param {MentorSkillsUpdateArgs} args - Arguments to update one MentorSkills.
   * @example
   * // Update one MentorSkills
   * const mentorSkills = await prisma.mentorSkills.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends MentorSkillsUpdateArgs>(args: Prisma.SelectSubset<T, MentorSkillsUpdateArgs<ExtArgs>>): Prisma.Prisma__MentorSkillsClient<runtime.Types.Result.GetResult<Prisma.$MentorSkillsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more MentorSkills.
   * @param {MentorSkillsDeleteManyArgs} args - Arguments to filter MentorSkills to delete.
   * @example
   * // Delete a few MentorSkills
   * const { count } = await prisma.mentorSkills.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends MentorSkillsDeleteManyArgs>(args?: Prisma.SelectSubset<T, MentorSkillsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more MentorSkills.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MentorSkillsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many MentorSkills
   * const mentorSkills = await prisma.mentorSkills.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends MentorSkillsUpdateManyArgs>(args: Prisma.SelectSubset<T, MentorSkillsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more MentorSkills and returns the data updated in the database.
   * @param {MentorSkillsUpdateManyAndReturnArgs} args - Arguments to update many MentorSkills.
   * @example
   * // Update many MentorSkills
   * const mentorSkills = await prisma.mentorSkills.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more MentorSkills and only return the `id`
   * const mentorSkillsWithIdOnly = await prisma.mentorSkills.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends MentorSkillsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, MentorSkillsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MentorSkillsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one MentorSkills.
   * @param {MentorSkillsUpsertArgs} args - Arguments to update or create a MentorSkills.
   * @example
   * // Update or create a MentorSkills
   * const mentorSkills = await prisma.mentorSkills.upsert({
   *   create: {
   *     // ... data to create a MentorSkills
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the MentorSkills we want to update
   *   }
   * })
   */
  upsert<T extends MentorSkillsUpsertArgs>(args: Prisma.SelectSubset<T, MentorSkillsUpsertArgs<ExtArgs>>): Prisma.Prisma__MentorSkillsClient<runtime.Types.Result.GetResult<Prisma.$MentorSkillsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of MentorSkills.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MentorSkillsCountArgs} args - Arguments to filter MentorSkills to count.
   * @example
   * // Count the number of MentorSkills
   * const count = await prisma.mentorSkills.count({
   *   where: {
   *     // ... the filter for the MentorSkills we want to count
   *   }
   * })
  **/
  count<T extends MentorSkillsCountArgs>(
    args?: Prisma.Subset<T, MentorSkillsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], MentorSkillsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a MentorSkills.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MentorSkillsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends MentorSkillsAggregateArgs>(args: Prisma.Subset<T, MentorSkillsAggregateArgs>): Prisma.PrismaPromise<GetMentorSkillsAggregateType<T>>

  /**
   * Group by MentorSkills.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MentorSkillsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends MentorSkillsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: MentorSkillsGroupByArgs['orderBy'] }
      : { orderBy?: MentorSkillsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, MentorSkillsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMentorSkillsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the MentorSkills model
 */
readonly fields: MentorSkillsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for MentorSkills.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__MentorSkillsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  mentor<T extends Prisma.MentorDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MentorDefaultArgs<ExtArgs>>): Prisma.Prisma__MentorClient<runtime.Types.Result.GetResult<Prisma.$MentorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  skill<T extends Prisma.SkillsDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SkillsDefaultArgs<ExtArgs>>): Prisma.Prisma__SkillsClient<runtime.Types.Result.GetResult<Prisma.$SkillsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the MentorSkills model
 */
export interface MentorSkillsFieldRefs {
  readonly id: Prisma.FieldRef<"MentorSkills", 'String'>
  readonly mentorId: Prisma.FieldRef<"MentorSkills", 'String'>
  readonly skillId: Prisma.FieldRef<"MentorSkills", 'String'>
}
    

// Custom InputTypes
/**
 * MentorSkills findUnique
 */
export type MentorSkillsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MentorSkills
   */
  select?: Prisma.MentorSkillsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MentorSkills
   */
  omit?: Prisma.MentorSkillsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MentorSkillsInclude<ExtArgs> | null
  /**
   * Filter, which MentorSkills to fetch.
   */
  where: Prisma.MentorSkillsWhereUniqueInput
}

/**
 * MentorSkills findUniqueOrThrow
 */
export type MentorSkillsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MentorSkills
   */
  select?: Prisma.MentorSkillsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MentorSkills
   */
  omit?: Prisma.MentorSkillsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MentorSkillsInclude<ExtArgs> | null
  /**
   * Filter, which MentorSkills to fetch.
   */
  where: Prisma.MentorSkillsWhereUniqueInput
}

/**
 * MentorSkills findFirst
 */
export type MentorSkillsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MentorSkills
   */
  select?: Prisma.MentorSkillsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MentorSkills
   */
  omit?: Prisma.MentorSkillsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MentorSkillsInclude<ExtArgs> | null
  /**
   * Filter, which MentorSkills to fetch.
   */
  where?: Prisma.MentorSkillsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MentorSkills to fetch.
   */
  orderBy?: Prisma.MentorSkillsOrderByWithRelationInput | Prisma.MentorSkillsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for MentorSkills.
   */
  cursor?: Prisma.MentorSkillsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MentorSkills from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MentorSkills.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of MentorSkills.
   */
  distinct?: Prisma.MentorSkillsScalarFieldEnum | Prisma.MentorSkillsScalarFieldEnum[]
}

/**
 * MentorSkills findFirstOrThrow
 */
export type MentorSkillsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MentorSkills
   */
  select?: Prisma.MentorSkillsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MentorSkills
   */
  omit?: Prisma.MentorSkillsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MentorSkillsInclude<ExtArgs> | null
  /**
   * Filter, which MentorSkills to fetch.
   */
  where?: Prisma.MentorSkillsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MentorSkills to fetch.
   */
  orderBy?: Prisma.MentorSkillsOrderByWithRelationInput | Prisma.MentorSkillsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for MentorSkills.
   */
  cursor?: Prisma.MentorSkillsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MentorSkills from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MentorSkills.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of MentorSkills.
   */
  distinct?: Prisma.MentorSkillsScalarFieldEnum | Prisma.MentorSkillsScalarFieldEnum[]
}

/**
 * MentorSkills findMany
 */
export type MentorSkillsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MentorSkills
   */
  select?: Prisma.MentorSkillsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MentorSkills
   */
  omit?: Prisma.MentorSkillsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MentorSkillsInclude<ExtArgs> | null
  /**
   * Filter, which MentorSkills to fetch.
   */
  where?: Prisma.MentorSkillsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MentorSkills to fetch.
   */
  orderBy?: Prisma.MentorSkillsOrderByWithRelationInput | Prisma.MentorSkillsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing MentorSkills.
   */
  cursor?: Prisma.MentorSkillsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MentorSkills from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MentorSkills.
   */
  skip?: number
  distinct?: Prisma.MentorSkillsScalarFieldEnum | Prisma.MentorSkillsScalarFieldEnum[]
}

/**
 * MentorSkills create
 */
export type MentorSkillsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MentorSkills
   */
  select?: Prisma.MentorSkillsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MentorSkills
   */
  omit?: Prisma.MentorSkillsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MentorSkillsInclude<ExtArgs> | null
  /**
   * The data needed to create a MentorSkills.
   */
  data: Prisma.XOR<Prisma.MentorSkillsCreateInput, Prisma.MentorSkillsUncheckedCreateInput>
}

/**
 * MentorSkills createMany
 */
export type MentorSkillsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many MentorSkills.
   */
  data: Prisma.MentorSkillsCreateManyInput | Prisma.MentorSkillsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * MentorSkills createManyAndReturn
 */
export type MentorSkillsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MentorSkills
   */
  select?: Prisma.MentorSkillsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the MentorSkills
   */
  omit?: Prisma.MentorSkillsOmit<ExtArgs> | null
  /**
   * The data used to create many MentorSkills.
   */
  data: Prisma.MentorSkillsCreateManyInput | Prisma.MentorSkillsCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MentorSkillsIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * MentorSkills update
 */
export type MentorSkillsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MentorSkills
   */
  select?: Prisma.MentorSkillsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MentorSkills
   */
  omit?: Prisma.MentorSkillsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MentorSkillsInclude<ExtArgs> | null
  /**
   * The data needed to update a MentorSkills.
   */
  data: Prisma.XOR<Prisma.MentorSkillsUpdateInput, Prisma.MentorSkillsUncheckedUpdateInput>
  /**
   * Choose, which MentorSkills to update.
   */
  where: Prisma.MentorSkillsWhereUniqueInput
}

/**
 * MentorSkills updateMany
 */
export type MentorSkillsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update MentorSkills.
   */
  data: Prisma.XOR<Prisma.MentorSkillsUpdateManyMutationInput, Prisma.MentorSkillsUncheckedUpdateManyInput>
  /**
   * Filter which MentorSkills to update
   */
  where?: Prisma.MentorSkillsWhereInput
  /**
   * Limit how many MentorSkills to update.
   */
  limit?: number
}

/**
 * MentorSkills updateManyAndReturn
 */
export type MentorSkillsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MentorSkills
   */
  select?: Prisma.MentorSkillsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the MentorSkills
   */
  omit?: Prisma.MentorSkillsOmit<ExtArgs> | null
  /**
   * The data used to update MentorSkills.
   */
  data: Prisma.XOR<Prisma.MentorSkillsUpdateManyMutationInput, Prisma.MentorSkillsUncheckedUpdateManyInput>
  /**
   * Filter which MentorSkills to update
   */
  where?: Prisma.MentorSkillsWhereInput
  /**
   * Limit how many MentorSkills to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MentorSkillsIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * MentorSkills upsert
 */
export type MentorSkillsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MentorSkills
   */
  select?: Prisma.MentorSkillsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MentorSkills
   */
  omit?: Prisma.MentorSkillsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MentorSkillsInclude<ExtArgs> | null
  /**
   * The filter to search for the MentorSkills to update in case it exists.
   */
  where: Prisma.MentorSkillsWhereUniqueInput
  /**
   * In case the MentorSkills found by the `where` argument doesn't exist, create a new MentorSkills with this data.
   */
  create: Prisma.XOR<Prisma.MentorSkillsCreateInput, Prisma.MentorSkillsUncheckedCreateInput>
  /**
   * In case the MentorSkills was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.MentorSkillsUpdateInput, Prisma.MentorSkillsUncheckedUpdateInput>
}

/**
 * MentorSkills delete
 */
export type MentorSkillsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MentorSkills
   */
  select?: Prisma.MentorSkillsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MentorSkills
   */
  omit?: Prisma.MentorSkillsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MentorSkillsInclude<ExtArgs> | null
  /**
   * Filter which MentorSkills to delete.
   */
  where: Prisma.MentorSkillsWhereUniqueInput
}

/**
 * MentorSkills deleteMany
 */
export type MentorSkillsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which MentorSkills to delete
   */
  where?: Prisma.MentorSkillsWhereInput
  /**
   * Limit how many MentorSkills to delete.
   */
  limit?: number
}

/**
 * MentorSkills without action
 */
export type MentorSkillsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MentorSkills
   */
  select?: Prisma.MentorSkillsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MentorSkills
   */
  omit?: Prisma.MentorSkillsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MentorSkillsInclude<ExtArgs> | null
}
