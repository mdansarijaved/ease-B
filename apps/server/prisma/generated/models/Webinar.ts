
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Webinar` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Webinar
 * 
 */
export type WebinarModel = runtime.Types.Result.DefaultSelection<Prisma.$WebinarPayload>

export type AggregateWebinar = {
  _count: WebinarCountAggregateOutputType | null
  _avg: WebinarAvgAggregateOutputType | null
  _sum: WebinarSumAggregateOutputType | null
  _min: WebinarMinAggregateOutputType | null
  _max: WebinarMaxAggregateOutputType | null
}

export type WebinarAvgAggregateOutputType = {
  price: number | null
  maxAttendees: number | null
  duration: number | null
}

export type WebinarSumAggregateOutputType = {
  price: number | null
  maxAttendees: number | null
  duration: number | null
}

export type WebinarMinAggregateOutputType = {
  id: string | null
  mentorId: string | null
  title: string | null
  description: string | null
  price: number | null
  currency: string | null
  maxAttendees: number | null
  scheduledAt: Date | null
  duration: number | null
  status: $Enums.WebinarStatus | null
  meetingLink: string | null
  recordingUrl: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type WebinarMaxAggregateOutputType = {
  id: string | null
  mentorId: string | null
  title: string | null
  description: string | null
  price: number | null
  currency: string | null
  maxAttendees: number | null
  scheduledAt: Date | null
  duration: number | null
  status: $Enums.WebinarStatus | null
  meetingLink: string | null
  recordingUrl: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type WebinarCountAggregateOutputType = {
  id: number
  mentorId: number
  title: number
  description: number
  price: number
  currency: number
  maxAttendees: number
  scheduledAt: number
  duration: number
  status: number
  meetingLink: number
  recordingUrl: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type WebinarAvgAggregateInputType = {
  price?: true
  maxAttendees?: true
  duration?: true
}

export type WebinarSumAggregateInputType = {
  price?: true
  maxAttendees?: true
  duration?: true
}

export type WebinarMinAggregateInputType = {
  id?: true
  mentorId?: true
  title?: true
  description?: true
  price?: true
  currency?: true
  maxAttendees?: true
  scheduledAt?: true
  duration?: true
  status?: true
  meetingLink?: true
  recordingUrl?: true
  createdAt?: true
  updatedAt?: true
}

export type WebinarMaxAggregateInputType = {
  id?: true
  mentorId?: true
  title?: true
  description?: true
  price?: true
  currency?: true
  maxAttendees?: true
  scheduledAt?: true
  duration?: true
  status?: true
  meetingLink?: true
  recordingUrl?: true
  createdAt?: true
  updatedAt?: true
}

export type WebinarCountAggregateInputType = {
  id?: true
  mentorId?: true
  title?: true
  description?: true
  price?: true
  currency?: true
  maxAttendees?: true
  scheduledAt?: true
  duration?: true
  status?: true
  meetingLink?: true
  recordingUrl?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type WebinarAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Webinar to aggregate.
   */
  where?: Prisma.WebinarWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Webinars to fetch.
   */
  orderBy?: Prisma.WebinarOrderByWithRelationInput | Prisma.WebinarOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.WebinarWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Webinars from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Webinars.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Webinars
  **/
  _count?: true | WebinarCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: WebinarAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: WebinarSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: WebinarMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: WebinarMaxAggregateInputType
}

export type GetWebinarAggregateType<T extends WebinarAggregateArgs> = {
      [P in keyof T & keyof AggregateWebinar]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWebinar[P]>
    : Prisma.GetScalarType<T[P], AggregateWebinar[P]>
}




export type WebinarGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WebinarWhereInput
  orderBy?: Prisma.WebinarOrderByWithAggregationInput | Prisma.WebinarOrderByWithAggregationInput[]
  by: Prisma.WebinarScalarFieldEnum[] | Prisma.WebinarScalarFieldEnum
  having?: Prisma.WebinarScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: WebinarCountAggregateInputType | true
  _avg?: WebinarAvgAggregateInputType
  _sum?: WebinarSumAggregateInputType
  _min?: WebinarMinAggregateInputType
  _max?: WebinarMaxAggregateInputType
}

export type WebinarGroupByOutputType = {
  id: string
  mentorId: string
  title: string
  description: string | null
  price: number
  currency: string
  maxAttendees: number | null
  scheduledAt: Date
  duration: number
  status: $Enums.WebinarStatus
  meetingLink: string | null
  recordingUrl: string | null
  createdAt: Date
  updatedAt: Date
  _count: WebinarCountAggregateOutputType | null
  _avg: WebinarAvgAggregateOutputType | null
  _sum: WebinarSumAggregateOutputType | null
  _min: WebinarMinAggregateOutputType | null
  _max: WebinarMaxAggregateOutputType | null
}

type GetWebinarGroupByPayload<T extends WebinarGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<WebinarGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof WebinarGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], WebinarGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], WebinarGroupByOutputType[P]>
      }
    >
  > 



export type WebinarWhereInput = {
  AND?: Prisma.WebinarWhereInput | Prisma.WebinarWhereInput[]
  OR?: Prisma.WebinarWhereInput[]
  NOT?: Prisma.WebinarWhereInput | Prisma.WebinarWhereInput[]
  id?: Prisma.StringFilter<"Webinar"> | string
  mentorId?: Prisma.StringFilter<"Webinar"> | string
  title?: Prisma.StringFilter<"Webinar"> | string
  description?: Prisma.StringNullableFilter<"Webinar"> | string | null
  price?: Prisma.IntFilter<"Webinar"> | number
  currency?: Prisma.StringFilter<"Webinar"> | string
  maxAttendees?: Prisma.IntNullableFilter<"Webinar"> | number | null
  scheduledAt?: Prisma.DateTimeFilter<"Webinar"> | Date | string
  duration?: Prisma.IntFilter<"Webinar"> | number
  status?: Prisma.EnumWebinarStatusFilter<"Webinar"> | $Enums.WebinarStatus
  meetingLink?: Prisma.StringNullableFilter<"Webinar"> | string | null
  recordingUrl?: Prisma.StringNullableFilter<"Webinar"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Webinar"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Webinar"> | Date | string
  mentor?: Prisma.XOR<Prisma.MentorScalarRelationFilter, Prisma.MentorWhereInput>
  attendees?: Prisma.WebinarAttendeeListRelationFilter
  appointments?: Prisma.AppointmentListRelationFilter
}

export type WebinarOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  mentorId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  price?: Prisma.SortOrder
  currency?: Prisma.SortOrder
  maxAttendees?: Prisma.SortOrderInput | Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  status?: Prisma.SortOrder
  meetingLink?: Prisma.SortOrderInput | Prisma.SortOrder
  recordingUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  mentor?: Prisma.MentorOrderByWithRelationInput
  attendees?: Prisma.WebinarAttendeeOrderByRelationAggregateInput
  appointments?: Prisma.AppointmentOrderByRelationAggregateInput
}

export type WebinarWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.WebinarWhereInput | Prisma.WebinarWhereInput[]
  OR?: Prisma.WebinarWhereInput[]
  NOT?: Prisma.WebinarWhereInput | Prisma.WebinarWhereInput[]
  mentorId?: Prisma.StringFilter<"Webinar"> | string
  title?: Prisma.StringFilter<"Webinar"> | string
  description?: Prisma.StringNullableFilter<"Webinar"> | string | null
  price?: Prisma.IntFilter<"Webinar"> | number
  currency?: Prisma.StringFilter<"Webinar"> | string
  maxAttendees?: Prisma.IntNullableFilter<"Webinar"> | number | null
  scheduledAt?: Prisma.DateTimeFilter<"Webinar"> | Date | string
  duration?: Prisma.IntFilter<"Webinar"> | number
  status?: Prisma.EnumWebinarStatusFilter<"Webinar"> | $Enums.WebinarStatus
  meetingLink?: Prisma.StringNullableFilter<"Webinar"> | string | null
  recordingUrl?: Prisma.StringNullableFilter<"Webinar"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Webinar"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Webinar"> | Date | string
  mentor?: Prisma.XOR<Prisma.MentorScalarRelationFilter, Prisma.MentorWhereInput>
  attendees?: Prisma.WebinarAttendeeListRelationFilter
  appointments?: Prisma.AppointmentListRelationFilter
}, "id">

export type WebinarOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  mentorId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  price?: Prisma.SortOrder
  currency?: Prisma.SortOrder
  maxAttendees?: Prisma.SortOrderInput | Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  status?: Prisma.SortOrder
  meetingLink?: Prisma.SortOrderInput | Prisma.SortOrder
  recordingUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.WebinarCountOrderByAggregateInput
  _avg?: Prisma.WebinarAvgOrderByAggregateInput
  _max?: Prisma.WebinarMaxOrderByAggregateInput
  _min?: Prisma.WebinarMinOrderByAggregateInput
  _sum?: Prisma.WebinarSumOrderByAggregateInput
}

export type WebinarScalarWhereWithAggregatesInput = {
  AND?: Prisma.WebinarScalarWhereWithAggregatesInput | Prisma.WebinarScalarWhereWithAggregatesInput[]
  OR?: Prisma.WebinarScalarWhereWithAggregatesInput[]
  NOT?: Prisma.WebinarScalarWhereWithAggregatesInput | Prisma.WebinarScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Webinar"> | string
  mentorId?: Prisma.StringWithAggregatesFilter<"Webinar"> | string
  title?: Prisma.StringWithAggregatesFilter<"Webinar"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"Webinar"> | string | null
  price?: Prisma.IntWithAggregatesFilter<"Webinar"> | number
  currency?: Prisma.StringWithAggregatesFilter<"Webinar"> | string
  maxAttendees?: Prisma.IntNullableWithAggregatesFilter<"Webinar"> | number | null
  scheduledAt?: Prisma.DateTimeWithAggregatesFilter<"Webinar"> | Date | string
  duration?: Prisma.IntWithAggregatesFilter<"Webinar"> | number
  status?: Prisma.EnumWebinarStatusWithAggregatesFilter<"Webinar"> | $Enums.WebinarStatus
  meetingLink?: Prisma.StringNullableWithAggregatesFilter<"Webinar"> | string | null
  recordingUrl?: Prisma.StringNullableWithAggregatesFilter<"Webinar"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Webinar"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Webinar"> | Date | string
}

export type WebinarCreateInput = {
  id?: string
  title: string
  description?: string | null
  price: number
  currency: string
  maxAttendees?: number | null
  scheduledAt: Date | string
  duration: number
  status?: $Enums.WebinarStatus
  meetingLink?: string | null
  recordingUrl?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  mentor: Prisma.MentorCreateNestedOneWithoutWebinarsInput
  attendees?: Prisma.WebinarAttendeeCreateNestedManyWithoutWebinarInput
  appointments?: Prisma.AppointmentCreateNestedManyWithoutWebinarInput
}

export type WebinarUncheckedCreateInput = {
  id?: string
  mentorId: string
  title: string
  description?: string | null
  price: number
  currency: string
  maxAttendees?: number | null
  scheduledAt: Date | string
  duration: number
  status?: $Enums.WebinarStatus
  meetingLink?: string | null
  recordingUrl?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  attendees?: Prisma.WebinarAttendeeUncheckedCreateNestedManyWithoutWebinarInput
  appointments?: Prisma.AppointmentUncheckedCreateNestedManyWithoutWebinarInput
}

export type WebinarUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.IntFieldUpdateOperationsInput | number
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  maxAttendees?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.EnumWebinarStatusFieldUpdateOperationsInput | $Enums.WebinarStatus
  meetingLink?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recordingUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  mentor?: Prisma.MentorUpdateOneRequiredWithoutWebinarsNestedInput
  attendees?: Prisma.WebinarAttendeeUpdateManyWithoutWebinarNestedInput
  appointments?: Prisma.AppointmentUpdateManyWithoutWebinarNestedInput
}

export type WebinarUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  mentorId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.IntFieldUpdateOperationsInput | number
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  maxAttendees?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.EnumWebinarStatusFieldUpdateOperationsInput | $Enums.WebinarStatus
  meetingLink?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recordingUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  attendees?: Prisma.WebinarAttendeeUncheckedUpdateManyWithoutWebinarNestedInput
  appointments?: Prisma.AppointmentUncheckedUpdateManyWithoutWebinarNestedInput
}

export type WebinarCreateManyInput = {
  id?: string
  mentorId: string
  title: string
  description?: string | null
  price: number
  currency: string
  maxAttendees?: number | null
  scheduledAt: Date | string
  duration: number
  status?: $Enums.WebinarStatus
  meetingLink?: string | null
  recordingUrl?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type WebinarUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.IntFieldUpdateOperationsInput | number
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  maxAttendees?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.EnumWebinarStatusFieldUpdateOperationsInput | $Enums.WebinarStatus
  meetingLink?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recordingUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WebinarUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  mentorId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.IntFieldUpdateOperationsInput | number
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  maxAttendees?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.EnumWebinarStatusFieldUpdateOperationsInput | $Enums.WebinarStatus
  meetingLink?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recordingUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WebinarListRelationFilter = {
  every?: Prisma.WebinarWhereInput
  some?: Prisma.WebinarWhereInput
  none?: Prisma.WebinarWhereInput
}

export type WebinarOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type WebinarCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  mentorId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  price?: Prisma.SortOrder
  currency?: Prisma.SortOrder
  maxAttendees?: Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  status?: Prisma.SortOrder
  meetingLink?: Prisma.SortOrder
  recordingUrl?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type WebinarAvgOrderByAggregateInput = {
  price?: Prisma.SortOrder
  maxAttendees?: Prisma.SortOrder
  duration?: Prisma.SortOrder
}

export type WebinarMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  mentorId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  price?: Prisma.SortOrder
  currency?: Prisma.SortOrder
  maxAttendees?: Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  status?: Prisma.SortOrder
  meetingLink?: Prisma.SortOrder
  recordingUrl?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type WebinarMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  mentorId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  price?: Prisma.SortOrder
  currency?: Prisma.SortOrder
  maxAttendees?: Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  status?: Prisma.SortOrder
  meetingLink?: Prisma.SortOrder
  recordingUrl?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type WebinarSumOrderByAggregateInput = {
  price?: Prisma.SortOrder
  maxAttendees?: Prisma.SortOrder
  duration?: Prisma.SortOrder
}

export type WebinarScalarRelationFilter = {
  is?: Prisma.WebinarWhereInput
  isNot?: Prisma.WebinarWhereInput
}

export type WebinarNullableScalarRelationFilter = {
  is?: Prisma.WebinarWhereInput | null
  isNot?: Prisma.WebinarWhereInput | null
}

export type WebinarCreateNestedManyWithoutMentorInput = {
  create?: Prisma.XOR<Prisma.WebinarCreateWithoutMentorInput, Prisma.WebinarUncheckedCreateWithoutMentorInput> | Prisma.WebinarCreateWithoutMentorInput[] | Prisma.WebinarUncheckedCreateWithoutMentorInput[]
  connectOrCreate?: Prisma.WebinarCreateOrConnectWithoutMentorInput | Prisma.WebinarCreateOrConnectWithoutMentorInput[]
  createMany?: Prisma.WebinarCreateManyMentorInputEnvelope
  connect?: Prisma.WebinarWhereUniqueInput | Prisma.WebinarWhereUniqueInput[]
}

export type WebinarUncheckedCreateNestedManyWithoutMentorInput = {
  create?: Prisma.XOR<Prisma.WebinarCreateWithoutMentorInput, Prisma.WebinarUncheckedCreateWithoutMentorInput> | Prisma.WebinarCreateWithoutMentorInput[] | Prisma.WebinarUncheckedCreateWithoutMentorInput[]
  connectOrCreate?: Prisma.WebinarCreateOrConnectWithoutMentorInput | Prisma.WebinarCreateOrConnectWithoutMentorInput[]
  createMany?: Prisma.WebinarCreateManyMentorInputEnvelope
  connect?: Prisma.WebinarWhereUniqueInput | Prisma.WebinarWhereUniqueInput[]
}

export type WebinarUpdateManyWithoutMentorNestedInput = {
  create?: Prisma.XOR<Prisma.WebinarCreateWithoutMentorInput, Prisma.WebinarUncheckedCreateWithoutMentorInput> | Prisma.WebinarCreateWithoutMentorInput[] | Prisma.WebinarUncheckedCreateWithoutMentorInput[]
  connectOrCreate?: Prisma.WebinarCreateOrConnectWithoutMentorInput | Prisma.WebinarCreateOrConnectWithoutMentorInput[]
  upsert?: Prisma.WebinarUpsertWithWhereUniqueWithoutMentorInput | Prisma.WebinarUpsertWithWhereUniqueWithoutMentorInput[]
  createMany?: Prisma.WebinarCreateManyMentorInputEnvelope
  set?: Prisma.WebinarWhereUniqueInput | Prisma.WebinarWhereUniqueInput[]
  disconnect?: Prisma.WebinarWhereUniqueInput | Prisma.WebinarWhereUniqueInput[]
  delete?: Prisma.WebinarWhereUniqueInput | Prisma.WebinarWhereUniqueInput[]
  connect?: Prisma.WebinarWhereUniqueInput | Prisma.WebinarWhereUniqueInput[]
  update?: Prisma.WebinarUpdateWithWhereUniqueWithoutMentorInput | Prisma.WebinarUpdateWithWhereUniqueWithoutMentorInput[]
  updateMany?: Prisma.WebinarUpdateManyWithWhereWithoutMentorInput | Prisma.WebinarUpdateManyWithWhereWithoutMentorInput[]
  deleteMany?: Prisma.WebinarScalarWhereInput | Prisma.WebinarScalarWhereInput[]
}

export type WebinarUncheckedUpdateManyWithoutMentorNestedInput = {
  create?: Prisma.XOR<Prisma.WebinarCreateWithoutMentorInput, Prisma.WebinarUncheckedCreateWithoutMentorInput> | Prisma.WebinarCreateWithoutMentorInput[] | Prisma.WebinarUncheckedCreateWithoutMentorInput[]
  connectOrCreate?: Prisma.WebinarCreateOrConnectWithoutMentorInput | Prisma.WebinarCreateOrConnectWithoutMentorInput[]
  upsert?: Prisma.WebinarUpsertWithWhereUniqueWithoutMentorInput | Prisma.WebinarUpsertWithWhereUniqueWithoutMentorInput[]
  createMany?: Prisma.WebinarCreateManyMentorInputEnvelope
  set?: Prisma.WebinarWhereUniqueInput | Prisma.WebinarWhereUniqueInput[]
  disconnect?: Prisma.WebinarWhereUniqueInput | Prisma.WebinarWhereUniqueInput[]
  delete?: Prisma.WebinarWhereUniqueInput | Prisma.WebinarWhereUniqueInput[]
  connect?: Prisma.WebinarWhereUniqueInput | Prisma.WebinarWhereUniqueInput[]
  update?: Prisma.WebinarUpdateWithWhereUniqueWithoutMentorInput | Prisma.WebinarUpdateWithWhereUniqueWithoutMentorInput[]
  updateMany?: Prisma.WebinarUpdateManyWithWhereWithoutMentorInput | Prisma.WebinarUpdateManyWithWhereWithoutMentorInput[]
  deleteMany?: Prisma.WebinarScalarWhereInput | Prisma.WebinarScalarWhereInput[]
}

export type NullableIntFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type EnumWebinarStatusFieldUpdateOperationsInput = {
  set?: $Enums.WebinarStatus
}

export type WebinarCreateNestedOneWithoutAttendeesInput = {
  create?: Prisma.XOR<Prisma.WebinarCreateWithoutAttendeesInput, Prisma.WebinarUncheckedCreateWithoutAttendeesInput>
  connectOrCreate?: Prisma.WebinarCreateOrConnectWithoutAttendeesInput
  connect?: Prisma.WebinarWhereUniqueInput
}

export type WebinarUpdateOneRequiredWithoutAttendeesNestedInput = {
  create?: Prisma.XOR<Prisma.WebinarCreateWithoutAttendeesInput, Prisma.WebinarUncheckedCreateWithoutAttendeesInput>
  connectOrCreate?: Prisma.WebinarCreateOrConnectWithoutAttendeesInput
  upsert?: Prisma.WebinarUpsertWithoutAttendeesInput
  connect?: Prisma.WebinarWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.WebinarUpdateToOneWithWhereWithoutAttendeesInput, Prisma.WebinarUpdateWithoutAttendeesInput>, Prisma.WebinarUncheckedUpdateWithoutAttendeesInput>
}

export type WebinarCreateNestedOneWithoutAppointmentsInput = {
  create?: Prisma.XOR<Prisma.WebinarCreateWithoutAppointmentsInput, Prisma.WebinarUncheckedCreateWithoutAppointmentsInput>
  connectOrCreate?: Prisma.WebinarCreateOrConnectWithoutAppointmentsInput
  connect?: Prisma.WebinarWhereUniqueInput
}

export type WebinarUpdateOneWithoutAppointmentsNestedInput = {
  create?: Prisma.XOR<Prisma.WebinarCreateWithoutAppointmentsInput, Prisma.WebinarUncheckedCreateWithoutAppointmentsInput>
  connectOrCreate?: Prisma.WebinarCreateOrConnectWithoutAppointmentsInput
  upsert?: Prisma.WebinarUpsertWithoutAppointmentsInput
  disconnect?: Prisma.WebinarWhereInput | boolean
  delete?: Prisma.WebinarWhereInput | boolean
  connect?: Prisma.WebinarWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.WebinarUpdateToOneWithWhereWithoutAppointmentsInput, Prisma.WebinarUpdateWithoutAppointmentsInput>, Prisma.WebinarUncheckedUpdateWithoutAppointmentsInput>
}

export type WebinarCreateWithoutMentorInput = {
  id?: string
  title: string
  description?: string | null
  price: number
  currency: string
  maxAttendees?: number | null
  scheduledAt: Date | string
  duration: number
  status?: $Enums.WebinarStatus
  meetingLink?: string | null
  recordingUrl?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  attendees?: Prisma.WebinarAttendeeCreateNestedManyWithoutWebinarInput
  appointments?: Prisma.AppointmentCreateNestedManyWithoutWebinarInput
}

export type WebinarUncheckedCreateWithoutMentorInput = {
  id?: string
  title: string
  description?: string | null
  price: number
  currency: string
  maxAttendees?: number | null
  scheduledAt: Date | string
  duration: number
  status?: $Enums.WebinarStatus
  meetingLink?: string | null
  recordingUrl?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  attendees?: Prisma.WebinarAttendeeUncheckedCreateNestedManyWithoutWebinarInput
  appointments?: Prisma.AppointmentUncheckedCreateNestedManyWithoutWebinarInput
}

export type WebinarCreateOrConnectWithoutMentorInput = {
  where: Prisma.WebinarWhereUniqueInput
  create: Prisma.XOR<Prisma.WebinarCreateWithoutMentorInput, Prisma.WebinarUncheckedCreateWithoutMentorInput>
}

export type WebinarCreateManyMentorInputEnvelope = {
  data: Prisma.WebinarCreateManyMentorInput | Prisma.WebinarCreateManyMentorInput[]
  skipDuplicates?: boolean
}

export type WebinarUpsertWithWhereUniqueWithoutMentorInput = {
  where: Prisma.WebinarWhereUniqueInput
  update: Prisma.XOR<Prisma.WebinarUpdateWithoutMentorInput, Prisma.WebinarUncheckedUpdateWithoutMentorInput>
  create: Prisma.XOR<Prisma.WebinarCreateWithoutMentorInput, Prisma.WebinarUncheckedCreateWithoutMentorInput>
}

export type WebinarUpdateWithWhereUniqueWithoutMentorInput = {
  where: Prisma.WebinarWhereUniqueInput
  data: Prisma.XOR<Prisma.WebinarUpdateWithoutMentorInput, Prisma.WebinarUncheckedUpdateWithoutMentorInput>
}

export type WebinarUpdateManyWithWhereWithoutMentorInput = {
  where: Prisma.WebinarScalarWhereInput
  data: Prisma.XOR<Prisma.WebinarUpdateManyMutationInput, Prisma.WebinarUncheckedUpdateManyWithoutMentorInput>
}

export type WebinarScalarWhereInput = {
  AND?: Prisma.WebinarScalarWhereInput | Prisma.WebinarScalarWhereInput[]
  OR?: Prisma.WebinarScalarWhereInput[]
  NOT?: Prisma.WebinarScalarWhereInput | Prisma.WebinarScalarWhereInput[]
  id?: Prisma.StringFilter<"Webinar"> | string
  mentorId?: Prisma.StringFilter<"Webinar"> | string
  title?: Prisma.StringFilter<"Webinar"> | string
  description?: Prisma.StringNullableFilter<"Webinar"> | string | null
  price?: Prisma.IntFilter<"Webinar"> | number
  currency?: Prisma.StringFilter<"Webinar"> | string
  maxAttendees?: Prisma.IntNullableFilter<"Webinar"> | number | null
  scheduledAt?: Prisma.DateTimeFilter<"Webinar"> | Date | string
  duration?: Prisma.IntFilter<"Webinar"> | number
  status?: Prisma.EnumWebinarStatusFilter<"Webinar"> | $Enums.WebinarStatus
  meetingLink?: Prisma.StringNullableFilter<"Webinar"> | string | null
  recordingUrl?: Prisma.StringNullableFilter<"Webinar"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Webinar"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Webinar"> | Date | string
}

export type WebinarCreateWithoutAttendeesInput = {
  id?: string
  title: string
  description?: string | null
  price: number
  currency: string
  maxAttendees?: number | null
  scheduledAt: Date | string
  duration: number
  status?: $Enums.WebinarStatus
  meetingLink?: string | null
  recordingUrl?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  mentor: Prisma.MentorCreateNestedOneWithoutWebinarsInput
  appointments?: Prisma.AppointmentCreateNestedManyWithoutWebinarInput
}

export type WebinarUncheckedCreateWithoutAttendeesInput = {
  id?: string
  mentorId: string
  title: string
  description?: string | null
  price: number
  currency: string
  maxAttendees?: number | null
  scheduledAt: Date | string
  duration: number
  status?: $Enums.WebinarStatus
  meetingLink?: string | null
  recordingUrl?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  appointments?: Prisma.AppointmentUncheckedCreateNestedManyWithoutWebinarInput
}

export type WebinarCreateOrConnectWithoutAttendeesInput = {
  where: Prisma.WebinarWhereUniqueInput
  create: Prisma.XOR<Prisma.WebinarCreateWithoutAttendeesInput, Prisma.WebinarUncheckedCreateWithoutAttendeesInput>
}

export type WebinarUpsertWithoutAttendeesInput = {
  update: Prisma.XOR<Prisma.WebinarUpdateWithoutAttendeesInput, Prisma.WebinarUncheckedUpdateWithoutAttendeesInput>
  create: Prisma.XOR<Prisma.WebinarCreateWithoutAttendeesInput, Prisma.WebinarUncheckedCreateWithoutAttendeesInput>
  where?: Prisma.WebinarWhereInput
}

export type WebinarUpdateToOneWithWhereWithoutAttendeesInput = {
  where?: Prisma.WebinarWhereInput
  data: Prisma.XOR<Prisma.WebinarUpdateWithoutAttendeesInput, Prisma.WebinarUncheckedUpdateWithoutAttendeesInput>
}

export type WebinarUpdateWithoutAttendeesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.IntFieldUpdateOperationsInput | number
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  maxAttendees?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.EnumWebinarStatusFieldUpdateOperationsInput | $Enums.WebinarStatus
  meetingLink?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recordingUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  mentor?: Prisma.MentorUpdateOneRequiredWithoutWebinarsNestedInput
  appointments?: Prisma.AppointmentUpdateManyWithoutWebinarNestedInput
}

export type WebinarUncheckedUpdateWithoutAttendeesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  mentorId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.IntFieldUpdateOperationsInput | number
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  maxAttendees?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.EnumWebinarStatusFieldUpdateOperationsInput | $Enums.WebinarStatus
  meetingLink?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recordingUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  appointments?: Prisma.AppointmentUncheckedUpdateManyWithoutWebinarNestedInput
}

export type WebinarCreateWithoutAppointmentsInput = {
  id?: string
  title: string
  description?: string | null
  price: number
  currency: string
  maxAttendees?: number | null
  scheduledAt: Date | string
  duration: number
  status?: $Enums.WebinarStatus
  meetingLink?: string | null
  recordingUrl?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  mentor: Prisma.MentorCreateNestedOneWithoutWebinarsInput
  attendees?: Prisma.WebinarAttendeeCreateNestedManyWithoutWebinarInput
}

export type WebinarUncheckedCreateWithoutAppointmentsInput = {
  id?: string
  mentorId: string
  title: string
  description?: string | null
  price: number
  currency: string
  maxAttendees?: number | null
  scheduledAt: Date | string
  duration: number
  status?: $Enums.WebinarStatus
  meetingLink?: string | null
  recordingUrl?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  attendees?: Prisma.WebinarAttendeeUncheckedCreateNestedManyWithoutWebinarInput
}

export type WebinarCreateOrConnectWithoutAppointmentsInput = {
  where: Prisma.WebinarWhereUniqueInput
  create: Prisma.XOR<Prisma.WebinarCreateWithoutAppointmentsInput, Prisma.WebinarUncheckedCreateWithoutAppointmentsInput>
}

export type WebinarUpsertWithoutAppointmentsInput = {
  update: Prisma.XOR<Prisma.WebinarUpdateWithoutAppointmentsInput, Prisma.WebinarUncheckedUpdateWithoutAppointmentsInput>
  create: Prisma.XOR<Prisma.WebinarCreateWithoutAppointmentsInput, Prisma.WebinarUncheckedCreateWithoutAppointmentsInput>
  where?: Prisma.WebinarWhereInput
}

export type WebinarUpdateToOneWithWhereWithoutAppointmentsInput = {
  where?: Prisma.WebinarWhereInput
  data: Prisma.XOR<Prisma.WebinarUpdateWithoutAppointmentsInput, Prisma.WebinarUncheckedUpdateWithoutAppointmentsInput>
}

export type WebinarUpdateWithoutAppointmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.IntFieldUpdateOperationsInput | number
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  maxAttendees?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.EnumWebinarStatusFieldUpdateOperationsInput | $Enums.WebinarStatus
  meetingLink?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recordingUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  mentor?: Prisma.MentorUpdateOneRequiredWithoutWebinarsNestedInput
  attendees?: Prisma.WebinarAttendeeUpdateManyWithoutWebinarNestedInput
}

export type WebinarUncheckedUpdateWithoutAppointmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  mentorId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.IntFieldUpdateOperationsInput | number
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  maxAttendees?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.EnumWebinarStatusFieldUpdateOperationsInput | $Enums.WebinarStatus
  meetingLink?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recordingUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  attendees?: Prisma.WebinarAttendeeUncheckedUpdateManyWithoutWebinarNestedInput
}

export type WebinarCreateManyMentorInput = {
  id?: string
  title: string
  description?: string | null
  price: number
  currency: string
  maxAttendees?: number | null
  scheduledAt: Date | string
  duration: number
  status?: $Enums.WebinarStatus
  meetingLink?: string | null
  recordingUrl?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type WebinarUpdateWithoutMentorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.IntFieldUpdateOperationsInput | number
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  maxAttendees?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.EnumWebinarStatusFieldUpdateOperationsInput | $Enums.WebinarStatus
  meetingLink?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recordingUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  attendees?: Prisma.WebinarAttendeeUpdateManyWithoutWebinarNestedInput
  appointments?: Prisma.AppointmentUpdateManyWithoutWebinarNestedInput
}

export type WebinarUncheckedUpdateWithoutMentorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.IntFieldUpdateOperationsInput | number
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  maxAttendees?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.EnumWebinarStatusFieldUpdateOperationsInput | $Enums.WebinarStatus
  meetingLink?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recordingUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  attendees?: Prisma.WebinarAttendeeUncheckedUpdateManyWithoutWebinarNestedInput
  appointments?: Prisma.AppointmentUncheckedUpdateManyWithoutWebinarNestedInput
}

export type WebinarUncheckedUpdateManyWithoutMentorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.IntFieldUpdateOperationsInput | number
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  maxAttendees?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  status?: Prisma.EnumWebinarStatusFieldUpdateOperationsInput | $Enums.WebinarStatus
  meetingLink?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recordingUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type WebinarCountOutputType
 */

export type WebinarCountOutputType = {
  attendees: number
  appointments: number
}

export type WebinarCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  attendees?: boolean | WebinarCountOutputTypeCountAttendeesArgs
  appointments?: boolean | WebinarCountOutputTypeCountAppointmentsArgs
}

/**
 * WebinarCountOutputType without action
 */
export type WebinarCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebinarCountOutputType
   */
  select?: Prisma.WebinarCountOutputTypeSelect<ExtArgs> | null
}

/**
 * WebinarCountOutputType without action
 */
export type WebinarCountOutputTypeCountAttendeesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WebinarAttendeeWhereInput
}

/**
 * WebinarCountOutputType without action
 */
export type WebinarCountOutputTypeCountAppointmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AppointmentWhereInput
}


export type WebinarSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  mentorId?: boolean
  title?: boolean
  description?: boolean
  price?: boolean
  currency?: boolean
  maxAttendees?: boolean
  scheduledAt?: boolean
  duration?: boolean
  status?: boolean
  meetingLink?: boolean
  recordingUrl?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  mentor?: boolean | Prisma.MentorDefaultArgs<ExtArgs>
  attendees?: boolean | Prisma.Webinar$attendeesArgs<ExtArgs>
  appointments?: boolean | Prisma.Webinar$appointmentsArgs<ExtArgs>
  _count?: boolean | Prisma.WebinarCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["webinar"]>

export type WebinarSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  mentorId?: boolean
  title?: boolean
  description?: boolean
  price?: boolean
  currency?: boolean
  maxAttendees?: boolean
  scheduledAt?: boolean
  duration?: boolean
  status?: boolean
  meetingLink?: boolean
  recordingUrl?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  mentor?: boolean | Prisma.MentorDefaultArgs<ExtArgs>
}, ExtArgs["result"]["webinar"]>

export type WebinarSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  mentorId?: boolean
  title?: boolean
  description?: boolean
  price?: boolean
  currency?: boolean
  maxAttendees?: boolean
  scheduledAt?: boolean
  duration?: boolean
  status?: boolean
  meetingLink?: boolean
  recordingUrl?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  mentor?: boolean | Prisma.MentorDefaultArgs<ExtArgs>
}, ExtArgs["result"]["webinar"]>

export type WebinarSelectScalar = {
  id?: boolean
  mentorId?: boolean
  title?: boolean
  description?: boolean
  price?: boolean
  currency?: boolean
  maxAttendees?: boolean
  scheduledAt?: boolean
  duration?: boolean
  status?: boolean
  meetingLink?: boolean
  recordingUrl?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type WebinarOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "mentorId" | "title" | "description" | "price" | "currency" | "maxAttendees" | "scheduledAt" | "duration" | "status" | "meetingLink" | "recordingUrl" | "createdAt" | "updatedAt", ExtArgs["result"]["webinar"]>
export type WebinarInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  mentor?: boolean | Prisma.MentorDefaultArgs<ExtArgs>
  attendees?: boolean | Prisma.Webinar$attendeesArgs<ExtArgs>
  appointments?: boolean | Prisma.Webinar$appointmentsArgs<ExtArgs>
  _count?: boolean | Prisma.WebinarCountOutputTypeDefaultArgs<ExtArgs>
}
export type WebinarIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  mentor?: boolean | Prisma.MentorDefaultArgs<ExtArgs>
}
export type WebinarIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  mentor?: boolean | Prisma.MentorDefaultArgs<ExtArgs>
}

export type $WebinarPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Webinar"
  objects: {
    mentor: Prisma.$MentorPayload<ExtArgs>
    attendees: Prisma.$WebinarAttendeePayload<ExtArgs>[]
    appointments: Prisma.$AppointmentPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    mentorId: string
    title: string
    description: string | null
    price: number
    currency: string
    maxAttendees: number | null
    scheduledAt: Date
    duration: number
    status: $Enums.WebinarStatus
    meetingLink: string | null
    recordingUrl: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["webinar"]>
  composites: {}
}

export type WebinarGetPayload<S extends boolean | null | undefined | WebinarDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$WebinarPayload, S>

export type WebinarCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<WebinarFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: WebinarCountAggregateInputType | true
  }

export interface WebinarDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Webinar'], meta: { name: 'Webinar' } }
  /**
   * Find zero or one Webinar that matches the filter.
   * @param {WebinarFindUniqueArgs} args - Arguments to find a Webinar
   * @example
   * // Get one Webinar
   * const webinar = await prisma.webinar.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends WebinarFindUniqueArgs>(args: Prisma.SelectSubset<T, WebinarFindUniqueArgs<ExtArgs>>): Prisma.Prisma__WebinarClient<runtime.Types.Result.GetResult<Prisma.$WebinarPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Webinar that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {WebinarFindUniqueOrThrowArgs} args - Arguments to find a Webinar
   * @example
   * // Get one Webinar
   * const webinar = await prisma.webinar.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends WebinarFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, WebinarFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__WebinarClient<runtime.Types.Result.GetResult<Prisma.$WebinarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Webinar that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebinarFindFirstArgs} args - Arguments to find a Webinar
   * @example
   * // Get one Webinar
   * const webinar = await prisma.webinar.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends WebinarFindFirstArgs>(args?: Prisma.SelectSubset<T, WebinarFindFirstArgs<ExtArgs>>): Prisma.Prisma__WebinarClient<runtime.Types.Result.GetResult<Prisma.$WebinarPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Webinar that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebinarFindFirstOrThrowArgs} args - Arguments to find a Webinar
   * @example
   * // Get one Webinar
   * const webinar = await prisma.webinar.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends WebinarFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, WebinarFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__WebinarClient<runtime.Types.Result.GetResult<Prisma.$WebinarPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Webinars that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebinarFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Webinars
   * const webinars = await prisma.webinar.findMany()
   * 
   * // Get first 10 Webinars
   * const webinars = await prisma.webinar.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const webinarWithIdOnly = await prisma.webinar.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends WebinarFindManyArgs>(args?: Prisma.SelectSubset<T, WebinarFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WebinarPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Webinar.
   * @param {WebinarCreateArgs} args - Arguments to create a Webinar.
   * @example
   * // Create one Webinar
   * const Webinar = await prisma.webinar.create({
   *   data: {
   *     // ... data to create a Webinar
   *   }
   * })
   * 
   */
  create<T extends WebinarCreateArgs>(args: Prisma.SelectSubset<T, WebinarCreateArgs<ExtArgs>>): Prisma.Prisma__WebinarClient<runtime.Types.Result.GetResult<Prisma.$WebinarPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Webinars.
   * @param {WebinarCreateManyArgs} args - Arguments to create many Webinars.
   * @example
   * // Create many Webinars
   * const webinar = await prisma.webinar.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends WebinarCreateManyArgs>(args?: Prisma.SelectSubset<T, WebinarCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Webinars and returns the data saved in the database.
   * @param {WebinarCreateManyAndReturnArgs} args - Arguments to create many Webinars.
   * @example
   * // Create many Webinars
   * const webinar = await prisma.webinar.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Webinars and only return the `id`
   * const webinarWithIdOnly = await prisma.webinar.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends WebinarCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, WebinarCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WebinarPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Webinar.
   * @param {WebinarDeleteArgs} args - Arguments to delete one Webinar.
   * @example
   * // Delete one Webinar
   * const Webinar = await prisma.webinar.delete({
   *   where: {
   *     // ... filter to delete one Webinar
   *   }
   * })
   * 
   */
  delete<T extends WebinarDeleteArgs>(args: Prisma.SelectSubset<T, WebinarDeleteArgs<ExtArgs>>): Prisma.Prisma__WebinarClient<runtime.Types.Result.GetResult<Prisma.$WebinarPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Webinar.
   * @param {WebinarUpdateArgs} args - Arguments to update one Webinar.
   * @example
   * // Update one Webinar
   * const webinar = await prisma.webinar.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends WebinarUpdateArgs>(args: Prisma.SelectSubset<T, WebinarUpdateArgs<ExtArgs>>): Prisma.Prisma__WebinarClient<runtime.Types.Result.GetResult<Prisma.$WebinarPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Webinars.
   * @param {WebinarDeleteManyArgs} args - Arguments to filter Webinars to delete.
   * @example
   * // Delete a few Webinars
   * const { count } = await prisma.webinar.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends WebinarDeleteManyArgs>(args?: Prisma.SelectSubset<T, WebinarDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Webinars.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebinarUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Webinars
   * const webinar = await prisma.webinar.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends WebinarUpdateManyArgs>(args: Prisma.SelectSubset<T, WebinarUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Webinars and returns the data updated in the database.
   * @param {WebinarUpdateManyAndReturnArgs} args - Arguments to update many Webinars.
   * @example
   * // Update many Webinars
   * const webinar = await prisma.webinar.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Webinars and only return the `id`
   * const webinarWithIdOnly = await prisma.webinar.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends WebinarUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, WebinarUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WebinarPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Webinar.
   * @param {WebinarUpsertArgs} args - Arguments to update or create a Webinar.
   * @example
   * // Update or create a Webinar
   * const webinar = await prisma.webinar.upsert({
   *   create: {
   *     // ... data to create a Webinar
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Webinar we want to update
   *   }
   * })
   */
  upsert<T extends WebinarUpsertArgs>(args: Prisma.SelectSubset<T, WebinarUpsertArgs<ExtArgs>>): Prisma.Prisma__WebinarClient<runtime.Types.Result.GetResult<Prisma.$WebinarPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Webinars.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebinarCountArgs} args - Arguments to filter Webinars to count.
   * @example
   * // Count the number of Webinars
   * const count = await prisma.webinar.count({
   *   where: {
   *     // ... the filter for the Webinars we want to count
   *   }
   * })
  **/
  count<T extends WebinarCountArgs>(
    args?: Prisma.Subset<T, WebinarCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], WebinarCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Webinar.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebinarAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends WebinarAggregateArgs>(args: Prisma.Subset<T, WebinarAggregateArgs>): Prisma.PrismaPromise<GetWebinarAggregateType<T>>

  /**
   * Group by Webinar.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebinarGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends WebinarGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: WebinarGroupByArgs['orderBy'] }
      : { orderBy?: WebinarGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, WebinarGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWebinarGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Webinar model
 */
readonly fields: WebinarFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Webinar.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__WebinarClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  mentor<T extends Prisma.MentorDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MentorDefaultArgs<ExtArgs>>): Prisma.Prisma__MentorClient<runtime.Types.Result.GetResult<Prisma.$MentorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  attendees<T extends Prisma.Webinar$attendeesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Webinar$attendeesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WebinarAttendeePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  appointments<T extends Prisma.Webinar$appointmentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Webinar$appointmentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AppointmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Webinar model
 */
export interface WebinarFieldRefs {
  readonly id: Prisma.FieldRef<"Webinar", 'String'>
  readonly mentorId: Prisma.FieldRef<"Webinar", 'String'>
  readonly title: Prisma.FieldRef<"Webinar", 'String'>
  readonly description: Prisma.FieldRef<"Webinar", 'String'>
  readonly price: Prisma.FieldRef<"Webinar", 'Int'>
  readonly currency: Prisma.FieldRef<"Webinar", 'String'>
  readonly maxAttendees: Prisma.FieldRef<"Webinar", 'Int'>
  readonly scheduledAt: Prisma.FieldRef<"Webinar", 'DateTime'>
  readonly duration: Prisma.FieldRef<"Webinar", 'Int'>
  readonly status: Prisma.FieldRef<"Webinar", 'WebinarStatus'>
  readonly meetingLink: Prisma.FieldRef<"Webinar", 'String'>
  readonly recordingUrl: Prisma.FieldRef<"Webinar", 'String'>
  readonly createdAt: Prisma.FieldRef<"Webinar", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Webinar", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Webinar findUnique
 */
export type WebinarFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Webinar
   */
  select?: Prisma.WebinarSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Webinar
   */
  omit?: Prisma.WebinarOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarInclude<ExtArgs> | null
  /**
   * Filter, which Webinar to fetch.
   */
  where: Prisma.WebinarWhereUniqueInput
}

/**
 * Webinar findUniqueOrThrow
 */
export type WebinarFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Webinar
   */
  select?: Prisma.WebinarSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Webinar
   */
  omit?: Prisma.WebinarOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarInclude<ExtArgs> | null
  /**
   * Filter, which Webinar to fetch.
   */
  where: Prisma.WebinarWhereUniqueInput
}

/**
 * Webinar findFirst
 */
export type WebinarFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Webinar
   */
  select?: Prisma.WebinarSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Webinar
   */
  omit?: Prisma.WebinarOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarInclude<ExtArgs> | null
  /**
   * Filter, which Webinar to fetch.
   */
  where?: Prisma.WebinarWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Webinars to fetch.
   */
  orderBy?: Prisma.WebinarOrderByWithRelationInput | Prisma.WebinarOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Webinars.
   */
  cursor?: Prisma.WebinarWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Webinars from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Webinars.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Webinars.
   */
  distinct?: Prisma.WebinarScalarFieldEnum | Prisma.WebinarScalarFieldEnum[]
}

/**
 * Webinar findFirstOrThrow
 */
export type WebinarFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Webinar
   */
  select?: Prisma.WebinarSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Webinar
   */
  omit?: Prisma.WebinarOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarInclude<ExtArgs> | null
  /**
   * Filter, which Webinar to fetch.
   */
  where?: Prisma.WebinarWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Webinars to fetch.
   */
  orderBy?: Prisma.WebinarOrderByWithRelationInput | Prisma.WebinarOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Webinars.
   */
  cursor?: Prisma.WebinarWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Webinars from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Webinars.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Webinars.
   */
  distinct?: Prisma.WebinarScalarFieldEnum | Prisma.WebinarScalarFieldEnum[]
}

/**
 * Webinar findMany
 */
export type WebinarFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Webinar
   */
  select?: Prisma.WebinarSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Webinar
   */
  omit?: Prisma.WebinarOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarInclude<ExtArgs> | null
  /**
   * Filter, which Webinars to fetch.
   */
  where?: Prisma.WebinarWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Webinars to fetch.
   */
  orderBy?: Prisma.WebinarOrderByWithRelationInput | Prisma.WebinarOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Webinars.
   */
  cursor?: Prisma.WebinarWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Webinars from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Webinars.
   */
  skip?: number
  distinct?: Prisma.WebinarScalarFieldEnum | Prisma.WebinarScalarFieldEnum[]
}

/**
 * Webinar create
 */
export type WebinarCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Webinar
   */
  select?: Prisma.WebinarSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Webinar
   */
  omit?: Prisma.WebinarOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarInclude<ExtArgs> | null
  /**
   * The data needed to create a Webinar.
   */
  data: Prisma.XOR<Prisma.WebinarCreateInput, Prisma.WebinarUncheckedCreateInput>
}

/**
 * Webinar createMany
 */
export type WebinarCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Webinars.
   */
  data: Prisma.WebinarCreateManyInput | Prisma.WebinarCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Webinar createManyAndReturn
 */
export type WebinarCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Webinar
   */
  select?: Prisma.WebinarSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Webinar
   */
  omit?: Prisma.WebinarOmit<ExtArgs> | null
  /**
   * The data used to create many Webinars.
   */
  data: Prisma.WebinarCreateManyInput | Prisma.WebinarCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Webinar update
 */
export type WebinarUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Webinar
   */
  select?: Prisma.WebinarSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Webinar
   */
  omit?: Prisma.WebinarOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarInclude<ExtArgs> | null
  /**
   * The data needed to update a Webinar.
   */
  data: Prisma.XOR<Prisma.WebinarUpdateInput, Prisma.WebinarUncheckedUpdateInput>
  /**
   * Choose, which Webinar to update.
   */
  where: Prisma.WebinarWhereUniqueInput
}

/**
 * Webinar updateMany
 */
export type WebinarUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Webinars.
   */
  data: Prisma.XOR<Prisma.WebinarUpdateManyMutationInput, Prisma.WebinarUncheckedUpdateManyInput>
  /**
   * Filter which Webinars to update
   */
  where?: Prisma.WebinarWhereInput
  /**
   * Limit how many Webinars to update.
   */
  limit?: number
}

/**
 * Webinar updateManyAndReturn
 */
export type WebinarUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Webinar
   */
  select?: Prisma.WebinarSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Webinar
   */
  omit?: Prisma.WebinarOmit<ExtArgs> | null
  /**
   * The data used to update Webinars.
   */
  data: Prisma.XOR<Prisma.WebinarUpdateManyMutationInput, Prisma.WebinarUncheckedUpdateManyInput>
  /**
   * Filter which Webinars to update
   */
  where?: Prisma.WebinarWhereInput
  /**
   * Limit how many Webinars to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Webinar upsert
 */
export type WebinarUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Webinar
   */
  select?: Prisma.WebinarSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Webinar
   */
  omit?: Prisma.WebinarOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarInclude<ExtArgs> | null
  /**
   * The filter to search for the Webinar to update in case it exists.
   */
  where: Prisma.WebinarWhereUniqueInput
  /**
   * In case the Webinar found by the `where` argument doesn't exist, create a new Webinar with this data.
   */
  create: Prisma.XOR<Prisma.WebinarCreateInput, Prisma.WebinarUncheckedCreateInput>
  /**
   * In case the Webinar was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.WebinarUpdateInput, Prisma.WebinarUncheckedUpdateInput>
}

/**
 * Webinar delete
 */
export type WebinarDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Webinar
   */
  select?: Prisma.WebinarSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Webinar
   */
  omit?: Prisma.WebinarOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarInclude<ExtArgs> | null
  /**
   * Filter which Webinar to delete.
   */
  where: Prisma.WebinarWhereUniqueInput
}

/**
 * Webinar deleteMany
 */
export type WebinarDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Webinars to delete
   */
  where?: Prisma.WebinarWhereInput
  /**
   * Limit how many Webinars to delete.
   */
  limit?: number
}

/**
 * Webinar.attendees
 */
export type Webinar$attendeesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebinarAttendee
   */
  select?: Prisma.WebinarAttendeeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebinarAttendee
   */
  omit?: Prisma.WebinarAttendeeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarAttendeeInclude<ExtArgs> | null
  where?: Prisma.WebinarAttendeeWhereInput
  orderBy?: Prisma.WebinarAttendeeOrderByWithRelationInput | Prisma.WebinarAttendeeOrderByWithRelationInput[]
  cursor?: Prisma.WebinarAttendeeWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.WebinarAttendeeScalarFieldEnum | Prisma.WebinarAttendeeScalarFieldEnum[]
}

/**
 * Webinar.appointments
 */
export type Webinar$appointmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Appointment
   */
  select?: Prisma.AppointmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Appointment
   */
  omit?: Prisma.AppointmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppointmentInclude<ExtArgs> | null
  where?: Prisma.AppointmentWhereInput
  orderBy?: Prisma.AppointmentOrderByWithRelationInput | Prisma.AppointmentOrderByWithRelationInput[]
  cursor?: Prisma.AppointmentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AppointmentScalarFieldEnum | Prisma.AppointmentScalarFieldEnum[]
}

/**
 * Webinar without action
 */
export type WebinarDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Webinar
   */
  select?: Prisma.WebinarSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Webinar
   */
  omit?: Prisma.WebinarOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarInclude<ExtArgs> | null
}
