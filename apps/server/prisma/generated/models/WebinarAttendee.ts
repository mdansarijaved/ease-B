
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `WebinarAttendee` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model WebinarAttendee
 * 
 */
export type WebinarAttendeeModel = runtime.Types.Result.DefaultSelection<Prisma.$WebinarAttendeePayload>

export type AggregateWebinarAttendee = {
  _count: WebinarAttendeeCountAggregateOutputType | null
  _min: WebinarAttendeeMinAggregateOutputType | null
  _max: WebinarAttendeeMaxAggregateOutputType | null
}

export type WebinarAttendeeMinAggregateOutputType = {
  id: string | null
  webinarId: string | null
  userId: string | null
  status: string | null
  joinedAt: Date | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type WebinarAttendeeMaxAggregateOutputType = {
  id: string | null
  webinarId: string | null
  userId: string | null
  status: string | null
  joinedAt: Date | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type WebinarAttendeeCountAggregateOutputType = {
  id: number
  webinarId: number
  userId: number
  status: number
  joinedAt: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type WebinarAttendeeMinAggregateInputType = {
  id?: true
  webinarId?: true
  userId?: true
  status?: true
  joinedAt?: true
  createdAt?: true
  updatedAt?: true
}

export type WebinarAttendeeMaxAggregateInputType = {
  id?: true
  webinarId?: true
  userId?: true
  status?: true
  joinedAt?: true
  createdAt?: true
  updatedAt?: true
}

export type WebinarAttendeeCountAggregateInputType = {
  id?: true
  webinarId?: true
  userId?: true
  status?: true
  joinedAt?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type WebinarAttendeeAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which WebinarAttendee to aggregate.
   */
  where?: Prisma.WebinarAttendeeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WebinarAttendees to fetch.
   */
  orderBy?: Prisma.WebinarAttendeeOrderByWithRelationInput | Prisma.WebinarAttendeeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.WebinarAttendeeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WebinarAttendees from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WebinarAttendees.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned WebinarAttendees
  **/
  _count?: true | WebinarAttendeeCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: WebinarAttendeeMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: WebinarAttendeeMaxAggregateInputType
}

export type GetWebinarAttendeeAggregateType<T extends WebinarAttendeeAggregateArgs> = {
      [P in keyof T & keyof AggregateWebinarAttendee]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWebinarAttendee[P]>
    : Prisma.GetScalarType<T[P], AggregateWebinarAttendee[P]>
}




export type WebinarAttendeeGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WebinarAttendeeWhereInput
  orderBy?: Prisma.WebinarAttendeeOrderByWithAggregationInput | Prisma.WebinarAttendeeOrderByWithAggregationInput[]
  by: Prisma.WebinarAttendeeScalarFieldEnum[] | Prisma.WebinarAttendeeScalarFieldEnum
  having?: Prisma.WebinarAttendeeScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: WebinarAttendeeCountAggregateInputType | true
  _min?: WebinarAttendeeMinAggregateInputType
  _max?: WebinarAttendeeMaxAggregateInputType
}

export type WebinarAttendeeGroupByOutputType = {
  id: string
  webinarId: string
  userId: string
  status: string
  joinedAt: Date | null
  createdAt: Date
  updatedAt: Date
  _count: WebinarAttendeeCountAggregateOutputType | null
  _min: WebinarAttendeeMinAggregateOutputType | null
  _max: WebinarAttendeeMaxAggregateOutputType | null
}

type GetWebinarAttendeeGroupByPayload<T extends WebinarAttendeeGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<WebinarAttendeeGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof WebinarAttendeeGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], WebinarAttendeeGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], WebinarAttendeeGroupByOutputType[P]>
      }
    >
  > 



export type WebinarAttendeeWhereInput = {
  AND?: Prisma.WebinarAttendeeWhereInput | Prisma.WebinarAttendeeWhereInput[]
  OR?: Prisma.WebinarAttendeeWhereInput[]
  NOT?: Prisma.WebinarAttendeeWhereInput | Prisma.WebinarAttendeeWhereInput[]
  id?: Prisma.StringFilter<"WebinarAttendee"> | string
  webinarId?: Prisma.StringFilter<"WebinarAttendee"> | string
  userId?: Prisma.StringFilter<"WebinarAttendee"> | string
  status?: Prisma.StringFilter<"WebinarAttendee"> | string
  joinedAt?: Prisma.DateTimeNullableFilter<"WebinarAttendee"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"WebinarAttendee"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"WebinarAttendee"> | Date | string
  webinar?: Prisma.XOR<Prisma.WebinarScalarRelationFilter, Prisma.WebinarWhereInput>
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}

export type WebinarAttendeeOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  webinarId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  joinedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  webinar?: Prisma.WebinarOrderByWithRelationInput
  user?: Prisma.UserOrderByWithRelationInput
}

export type WebinarAttendeeWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  webinarId_userId?: Prisma.WebinarAttendeeWebinarIdUserIdCompoundUniqueInput
  AND?: Prisma.WebinarAttendeeWhereInput | Prisma.WebinarAttendeeWhereInput[]
  OR?: Prisma.WebinarAttendeeWhereInput[]
  NOT?: Prisma.WebinarAttendeeWhereInput | Prisma.WebinarAttendeeWhereInput[]
  webinarId?: Prisma.StringFilter<"WebinarAttendee"> | string
  userId?: Prisma.StringFilter<"WebinarAttendee"> | string
  status?: Prisma.StringFilter<"WebinarAttendee"> | string
  joinedAt?: Prisma.DateTimeNullableFilter<"WebinarAttendee"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"WebinarAttendee"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"WebinarAttendee"> | Date | string
  webinar?: Prisma.XOR<Prisma.WebinarScalarRelationFilter, Prisma.WebinarWhereInput>
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}, "id" | "webinarId_userId">

export type WebinarAttendeeOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  webinarId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  joinedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.WebinarAttendeeCountOrderByAggregateInput
  _max?: Prisma.WebinarAttendeeMaxOrderByAggregateInput
  _min?: Prisma.WebinarAttendeeMinOrderByAggregateInput
}

export type WebinarAttendeeScalarWhereWithAggregatesInput = {
  AND?: Prisma.WebinarAttendeeScalarWhereWithAggregatesInput | Prisma.WebinarAttendeeScalarWhereWithAggregatesInput[]
  OR?: Prisma.WebinarAttendeeScalarWhereWithAggregatesInput[]
  NOT?: Prisma.WebinarAttendeeScalarWhereWithAggregatesInput | Prisma.WebinarAttendeeScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"WebinarAttendee"> | string
  webinarId?: Prisma.StringWithAggregatesFilter<"WebinarAttendee"> | string
  userId?: Prisma.StringWithAggregatesFilter<"WebinarAttendee"> | string
  status?: Prisma.StringWithAggregatesFilter<"WebinarAttendee"> | string
  joinedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"WebinarAttendee"> | Date | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"WebinarAttendee"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"WebinarAttendee"> | Date | string
}

export type WebinarAttendeeCreateInput = {
  id?: string
  status?: string
  joinedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  webinar: Prisma.WebinarCreateNestedOneWithoutAttendeesInput
  user: Prisma.UserCreateNestedOneWithoutWebinarAttendeeInput
}

export type WebinarAttendeeUncheckedCreateInput = {
  id?: string
  webinarId: string
  userId: string
  status?: string
  joinedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type WebinarAttendeeUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  joinedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  webinar?: Prisma.WebinarUpdateOneRequiredWithoutAttendeesNestedInput
  user?: Prisma.UserUpdateOneRequiredWithoutWebinarAttendeeNestedInput
}

export type WebinarAttendeeUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  webinarId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  joinedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WebinarAttendeeCreateManyInput = {
  id?: string
  webinarId: string
  userId: string
  status?: string
  joinedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type WebinarAttendeeUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  joinedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WebinarAttendeeUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  webinarId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  joinedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WebinarAttendeeListRelationFilter = {
  every?: Prisma.WebinarAttendeeWhereInput
  some?: Prisma.WebinarAttendeeWhereInput
  none?: Prisma.WebinarAttendeeWhereInput
}

export type WebinarAttendeeOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type WebinarAttendeeWebinarIdUserIdCompoundUniqueInput = {
  webinarId: string
  userId: string
}

export type WebinarAttendeeCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  webinarId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  joinedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type WebinarAttendeeMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  webinarId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  joinedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type WebinarAttendeeMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  webinarId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  joinedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type WebinarAttendeeCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.WebinarAttendeeCreateWithoutUserInput, Prisma.WebinarAttendeeUncheckedCreateWithoutUserInput> | Prisma.WebinarAttendeeCreateWithoutUserInput[] | Prisma.WebinarAttendeeUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.WebinarAttendeeCreateOrConnectWithoutUserInput | Prisma.WebinarAttendeeCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.WebinarAttendeeCreateManyUserInputEnvelope
  connect?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
}

export type WebinarAttendeeUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.WebinarAttendeeCreateWithoutUserInput, Prisma.WebinarAttendeeUncheckedCreateWithoutUserInput> | Prisma.WebinarAttendeeCreateWithoutUserInput[] | Prisma.WebinarAttendeeUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.WebinarAttendeeCreateOrConnectWithoutUserInput | Prisma.WebinarAttendeeCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.WebinarAttendeeCreateManyUserInputEnvelope
  connect?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
}

export type WebinarAttendeeUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.WebinarAttendeeCreateWithoutUserInput, Prisma.WebinarAttendeeUncheckedCreateWithoutUserInput> | Prisma.WebinarAttendeeCreateWithoutUserInput[] | Prisma.WebinarAttendeeUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.WebinarAttendeeCreateOrConnectWithoutUserInput | Prisma.WebinarAttendeeCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.WebinarAttendeeUpsertWithWhereUniqueWithoutUserInput | Prisma.WebinarAttendeeUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.WebinarAttendeeCreateManyUserInputEnvelope
  set?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
  disconnect?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
  delete?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
  connect?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
  update?: Prisma.WebinarAttendeeUpdateWithWhereUniqueWithoutUserInput | Prisma.WebinarAttendeeUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.WebinarAttendeeUpdateManyWithWhereWithoutUserInput | Prisma.WebinarAttendeeUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.WebinarAttendeeScalarWhereInput | Prisma.WebinarAttendeeScalarWhereInput[]
}

export type WebinarAttendeeUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.WebinarAttendeeCreateWithoutUserInput, Prisma.WebinarAttendeeUncheckedCreateWithoutUserInput> | Prisma.WebinarAttendeeCreateWithoutUserInput[] | Prisma.WebinarAttendeeUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.WebinarAttendeeCreateOrConnectWithoutUserInput | Prisma.WebinarAttendeeCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.WebinarAttendeeUpsertWithWhereUniqueWithoutUserInput | Prisma.WebinarAttendeeUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.WebinarAttendeeCreateManyUserInputEnvelope
  set?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
  disconnect?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
  delete?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
  connect?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
  update?: Prisma.WebinarAttendeeUpdateWithWhereUniqueWithoutUserInput | Prisma.WebinarAttendeeUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.WebinarAttendeeUpdateManyWithWhereWithoutUserInput | Prisma.WebinarAttendeeUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.WebinarAttendeeScalarWhereInput | Prisma.WebinarAttendeeScalarWhereInput[]
}

export type WebinarAttendeeCreateNestedManyWithoutWebinarInput = {
  create?: Prisma.XOR<Prisma.WebinarAttendeeCreateWithoutWebinarInput, Prisma.WebinarAttendeeUncheckedCreateWithoutWebinarInput> | Prisma.WebinarAttendeeCreateWithoutWebinarInput[] | Prisma.WebinarAttendeeUncheckedCreateWithoutWebinarInput[]
  connectOrCreate?: Prisma.WebinarAttendeeCreateOrConnectWithoutWebinarInput | Prisma.WebinarAttendeeCreateOrConnectWithoutWebinarInput[]
  createMany?: Prisma.WebinarAttendeeCreateManyWebinarInputEnvelope
  connect?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
}

export type WebinarAttendeeUncheckedCreateNestedManyWithoutWebinarInput = {
  create?: Prisma.XOR<Prisma.WebinarAttendeeCreateWithoutWebinarInput, Prisma.WebinarAttendeeUncheckedCreateWithoutWebinarInput> | Prisma.WebinarAttendeeCreateWithoutWebinarInput[] | Prisma.WebinarAttendeeUncheckedCreateWithoutWebinarInput[]
  connectOrCreate?: Prisma.WebinarAttendeeCreateOrConnectWithoutWebinarInput | Prisma.WebinarAttendeeCreateOrConnectWithoutWebinarInput[]
  createMany?: Prisma.WebinarAttendeeCreateManyWebinarInputEnvelope
  connect?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
}

export type WebinarAttendeeUpdateManyWithoutWebinarNestedInput = {
  create?: Prisma.XOR<Prisma.WebinarAttendeeCreateWithoutWebinarInput, Prisma.WebinarAttendeeUncheckedCreateWithoutWebinarInput> | Prisma.WebinarAttendeeCreateWithoutWebinarInput[] | Prisma.WebinarAttendeeUncheckedCreateWithoutWebinarInput[]
  connectOrCreate?: Prisma.WebinarAttendeeCreateOrConnectWithoutWebinarInput | Prisma.WebinarAttendeeCreateOrConnectWithoutWebinarInput[]
  upsert?: Prisma.WebinarAttendeeUpsertWithWhereUniqueWithoutWebinarInput | Prisma.WebinarAttendeeUpsertWithWhereUniqueWithoutWebinarInput[]
  createMany?: Prisma.WebinarAttendeeCreateManyWebinarInputEnvelope
  set?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
  disconnect?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
  delete?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
  connect?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
  update?: Prisma.WebinarAttendeeUpdateWithWhereUniqueWithoutWebinarInput | Prisma.WebinarAttendeeUpdateWithWhereUniqueWithoutWebinarInput[]
  updateMany?: Prisma.WebinarAttendeeUpdateManyWithWhereWithoutWebinarInput | Prisma.WebinarAttendeeUpdateManyWithWhereWithoutWebinarInput[]
  deleteMany?: Prisma.WebinarAttendeeScalarWhereInput | Prisma.WebinarAttendeeScalarWhereInput[]
}

export type WebinarAttendeeUncheckedUpdateManyWithoutWebinarNestedInput = {
  create?: Prisma.XOR<Prisma.WebinarAttendeeCreateWithoutWebinarInput, Prisma.WebinarAttendeeUncheckedCreateWithoutWebinarInput> | Prisma.WebinarAttendeeCreateWithoutWebinarInput[] | Prisma.WebinarAttendeeUncheckedCreateWithoutWebinarInput[]
  connectOrCreate?: Prisma.WebinarAttendeeCreateOrConnectWithoutWebinarInput | Prisma.WebinarAttendeeCreateOrConnectWithoutWebinarInput[]
  upsert?: Prisma.WebinarAttendeeUpsertWithWhereUniqueWithoutWebinarInput | Prisma.WebinarAttendeeUpsertWithWhereUniqueWithoutWebinarInput[]
  createMany?: Prisma.WebinarAttendeeCreateManyWebinarInputEnvelope
  set?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
  disconnect?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
  delete?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
  connect?: Prisma.WebinarAttendeeWhereUniqueInput | Prisma.WebinarAttendeeWhereUniqueInput[]
  update?: Prisma.WebinarAttendeeUpdateWithWhereUniqueWithoutWebinarInput | Prisma.WebinarAttendeeUpdateWithWhereUniqueWithoutWebinarInput[]
  updateMany?: Prisma.WebinarAttendeeUpdateManyWithWhereWithoutWebinarInput | Prisma.WebinarAttendeeUpdateManyWithWhereWithoutWebinarInput[]
  deleteMany?: Prisma.WebinarAttendeeScalarWhereInput | Prisma.WebinarAttendeeScalarWhereInput[]
}

export type WebinarAttendeeCreateWithoutUserInput = {
  id?: string
  status?: string
  joinedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  webinar: Prisma.WebinarCreateNestedOneWithoutAttendeesInput
}

export type WebinarAttendeeUncheckedCreateWithoutUserInput = {
  id?: string
  webinarId: string
  status?: string
  joinedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type WebinarAttendeeCreateOrConnectWithoutUserInput = {
  where: Prisma.WebinarAttendeeWhereUniqueInput
  create: Prisma.XOR<Prisma.WebinarAttendeeCreateWithoutUserInput, Prisma.WebinarAttendeeUncheckedCreateWithoutUserInput>
}

export type WebinarAttendeeCreateManyUserInputEnvelope = {
  data: Prisma.WebinarAttendeeCreateManyUserInput | Prisma.WebinarAttendeeCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type WebinarAttendeeUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.WebinarAttendeeWhereUniqueInput
  update: Prisma.XOR<Prisma.WebinarAttendeeUpdateWithoutUserInput, Prisma.WebinarAttendeeUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.WebinarAttendeeCreateWithoutUserInput, Prisma.WebinarAttendeeUncheckedCreateWithoutUserInput>
}

export type WebinarAttendeeUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.WebinarAttendeeWhereUniqueInput
  data: Prisma.XOR<Prisma.WebinarAttendeeUpdateWithoutUserInput, Prisma.WebinarAttendeeUncheckedUpdateWithoutUserInput>
}

export type WebinarAttendeeUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.WebinarAttendeeScalarWhereInput
  data: Prisma.XOR<Prisma.WebinarAttendeeUpdateManyMutationInput, Prisma.WebinarAttendeeUncheckedUpdateManyWithoutUserInput>
}

export type WebinarAttendeeScalarWhereInput = {
  AND?: Prisma.WebinarAttendeeScalarWhereInput | Prisma.WebinarAttendeeScalarWhereInput[]
  OR?: Prisma.WebinarAttendeeScalarWhereInput[]
  NOT?: Prisma.WebinarAttendeeScalarWhereInput | Prisma.WebinarAttendeeScalarWhereInput[]
  id?: Prisma.StringFilter<"WebinarAttendee"> | string
  webinarId?: Prisma.StringFilter<"WebinarAttendee"> | string
  userId?: Prisma.StringFilter<"WebinarAttendee"> | string
  status?: Prisma.StringFilter<"WebinarAttendee"> | string
  joinedAt?: Prisma.DateTimeNullableFilter<"WebinarAttendee"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"WebinarAttendee"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"WebinarAttendee"> | Date | string
}

export type WebinarAttendeeCreateWithoutWebinarInput = {
  id?: string
  status?: string
  joinedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutWebinarAttendeeInput
}

export type WebinarAttendeeUncheckedCreateWithoutWebinarInput = {
  id?: string
  userId: string
  status?: string
  joinedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type WebinarAttendeeCreateOrConnectWithoutWebinarInput = {
  where: Prisma.WebinarAttendeeWhereUniqueInput
  create: Prisma.XOR<Prisma.WebinarAttendeeCreateWithoutWebinarInput, Prisma.WebinarAttendeeUncheckedCreateWithoutWebinarInput>
}

export type WebinarAttendeeCreateManyWebinarInputEnvelope = {
  data: Prisma.WebinarAttendeeCreateManyWebinarInput | Prisma.WebinarAttendeeCreateManyWebinarInput[]
  skipDuplicates?: boolean
}

export type WebinarAttendeeUpsertWithWhereUniqueWithoutWebinarInput = {
  where: Prisma.WebinarAttendeeWhereUniqueInput
  update: Prisma.XOR<Prisma.WebinarAttendeeUpdateWithoutWebinarInput, Prisma.WebinarAttendeeUncheckedUpdateWithoutWebinarInput>
  create: Prisma.XOR<Prisma.WebinarAttendeeCreateWithoutWebinarInput, Prisma.WebinarAttendeeUncheckedCreateWithoutWebinarInput>
}

export type WebinarAttendeeUpdateWithWhereUniqueWithoutWebinarInput = {
  where: Prisma.WebinarAttendeeWhereUniqueInput
  data: Prisma.XOR<Prisma.WebinarAttendeeUpdateWithoutWebinarInput, Prisma.WebinarAttendeeUncheckedUpdateWithoutWebinarInput>
}

export type WebinarAttendeeUpdateManyWithWhereWithoutWebinarInput = {
  where: Prisma.WebinarAttendeeScalarWhereInput
  data: Prisma.XOR<Prisma.WebinarAttendeeUpdateManyMutationInput, Prisma.WebinarAttendeeUncheckedUpdateManyWithoutWebinarInput>
}

export type WebinarAttendeeCreateManyUserInput = {
  id?: string
  webinarId: string
  status?: string
  joinedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type WebinarAttendeeUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  joinedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  webinar?: Prisma.WebinarUpdateOneRequiredWithoutAttendeesNestedInput
}

export type WebinarAttendeeUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  webinarId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  joinedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WebinarAttendeeUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  webinarId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  joinedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WebinarAttendeeCreateManyWebinarInput = {
  id?: string
  userId: string
  status?: string
  joinedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type WebinarAttendeeUpdateWithoutWebinarInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  joinedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutWebinarAttendeeNestedInput
}

export type WebinarAttendeeUncheckedUpdateWithoutWebinarInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  joinedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WebinarAttendeeUncheckedUpdateManyWithoutWebinarInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  joinedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type WebinarAttendeeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  webinarId?: boolean
  userId?: boolean
  status?: boolean
  joinedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  webinar?: boolean | Prisma.WebinarDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["webinarAttendee"]>

export type WebinarAttendeeSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  webinarId?: boolean
  userId?: boolean
  status?: boolean
  joinedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  webinar?: boolean | Prisma.WebinarDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["webinarAttendee"]>

export type WebinarAttendeeSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  webinarId?: boolean
  userId?: boolean
  status?: boolean
  joinedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  webinar?: boolean | Prisma.WebinarDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["webinarAttendee"]>

export type WebinarAttendeeSelectScalar = {
  id?: boolean
  webinarId?: boolean
  userId?: boolean
  status?: boolean
  joinedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type WebinarAttendeeOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "webinarId" | "userId" | "status" | "joinedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["webinarAttendee"]>
export type WebinarAttendeeInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  webinar?: boolean | Prisma.WebinarDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type WebinarAttendeeIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  webinar?: boolean | Prisma.WebinarDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type WebinarAttendeeIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  webinar?: boolean | Prisma.WebinarDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $WebinarAttendeePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "WebinarAttendee"
  objects: {
    webinar: Prisma.$WebinarPayload<ExtArgs>
    user: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    webinarId: string
    userId: string
    status: string
    joinedAt: Date | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["webinarAttendee"]>
  composites: {}
}

export type WebinarAttendeeGetPayload<S extends boolean | null | undefined | WebinarAttendeeDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$WebinarAttendeePayload, S>

export type WebinarAttendeeCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<WebinarAttendeeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: WebinarAttendeeCountAggregateInputType | true
  }

export interface WebinarAttendeeDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WebinarAttendee'], meta: { name: 'WebinarAttendee' } }
  /**
   * Find zero or one WebinarAttendee that matches the filter.
   * @param {WebinarAttendeeFindUniqueArgs} args - Arguments to find a WebinarAttendee
   * @example
   * // Get one WebinarAttendee
   * const webinarAttendee = await prisma.webinarAttendee.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends WebinarAttendeeFindUniqueArgs>(args: Prisma.SelectSubset<T, WebinarAttendeeFindUniqueArgs<ExtArgs>>): Prisma.Prisma__WebinarAttendeeClient<runtime.Types.Result.GetResult<Prisma.$WebinarAttendeePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one WebinarAttendee that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {WebinarAttendeeFindUniqueOrThrowArgs} args - Arguments to find a WebinarAttendee
   * @example
   * // Get one WebinarAttendee
   * const webinarAttendee = await prisma.webinarAttendee.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends WebinarAttendeeFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, WebinarAttendeeFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__WebinarAttendeeClient<runtime.Types.Result.GetResult<Prisma.$WebinarAttendeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first WebinarAttendee that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebinarAttendeeFindFirstArgs} args - Arguments to find a WebinarAttendee
   * @example
   * // Get one WebinarAttendee
   * const webinarAttendee = await prisma.webinarAttendee.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends WebinarAttendeeFindFirstArgs>(args?: Prisma.SelectSubset<T, WebinarAttendeeFindFirstArgs<ExtArgs>>): Prisma.Prisma__WebinarAttendeeClient<runtime.Types.Result.GetResult<Prisma.$WebinarAttendeePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first WebinarAttendee that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebinarAttendeeFindFirstOrThrowArgs} args - Arguments to find a WebinarAttendee
   * @example
   * // Get one WebinarAttendee
   * const webinarAttendee = await prisma.webinarAttendee.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends WebinarAttendeeFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, WebinarAttendeeFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__WebinarAttendeeClient<runtime.Types.Result.GetResult<Prisma.$WebinarAttendeePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more WebinarAttendees that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebinarAttendeeFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all WebinarAttendees
   * const webinarAttendees = await prisma.webinarAttendee.findMany()
   * 
   * // Get first 10 WebinarAttendees
   * const webinarAttendees = await prisma.webinarAttendee.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const webinarAttendeeWithIdOnly = await prisma.webinarAttendee.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends WebinarAttendeeFindManyArgs>(args?: Prisma.SelectSubset<T, WebinarAttendeeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WebinarAttendeePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a WebinarAttendee.
   * @param {WebinarAttendeeCreateArgs} args - Arguments to create a WebinarAttendee.
   * @example
   * // Create one WebinarAttendee
   * const WebinarAttendee = await prisma.webinarAttendee.create({
   *   data: {
   *     // ... data to create a WebinarAttendee
   *   }
   * })
   * 
   */
  create<T extends WebinarAttendeeCreateArgs>(args: Prisma.SelectSubset<T, WebinarAttendeeCreateArgs<ExtArgs>>): Prisma.Prisma__WebinarAttendeeClient<runtime.Types.Result.GetResult<Prisma.$WebinarAttendeePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many WebinarAttendees.
   * @param {WebinarAttendeeCreateManyArgs} args - Arguments to create many WebinarAttendees.
   * @example
   * // Create many WebinarAttendees
   * const webinarAttendee = await prisma.webinarAttendee.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends WebinarAttendeeCreateManyArgs>(args?: Prisma.SelectSubset<T, WebinarAttendeeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many WebinarAttendees and returns the data saved in the database.
   * @param {WebinarAttendeeCreateManyAndReturnArgs} args - Arguments to create many WebinarAttendees.
   * @example
   * // Create many WebinarAttendees
   * const webinarAttendee = await prisma.webinarAttendee.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many WebinarAttendees and only return the `id`
   * const webinarAttendeeWithIdOnly = await prisma.webinarAttendee.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends WebinarAttendeeCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, WebinarAttendeeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WebinarAttendeePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a WebinarAttendee.
   * @param {WebinarAttendeeDeleteArgs} args - Arguments to delete one WebinarAttendee.
   * @example
   * // Delete one WebinarAttendee
   * const WebinarAttendee = await prisma.webinarAttendee.delete({
   *   where: {
   *     // ... filter to delete one WebinarAttendee
   *   }
   * })
   * 
   */
  delete<T extends WebinarAttendeeDeleteArgs>(args: Prisma.SelectSubset<T, WebinarAttendeeDeleteArgs<ExtArgs>>): Prisma.Prisma__WebinarAttendeeClient<runtime.Types.Result.GetResult<Prisma.$WebinarAttendeePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one WebinarAttendee.
   * @param {WebinarAttendeeUpdateArgs} args - Arguments to update one WebinarAttendee.
   * @example
   * // Update one WebinarAttendee
   * const webinarAttendee = await prisma.webinarAttendee.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends WebinarAttendeeUpdateArgs>(args: Prisma.SelectSubset<T, WebinarAttendeeUpdateArgs<ExtArgs>>): Prisma.Prisma__WebinarAttendeeClient<runtime.Types.Result.GetResult<Prisma.$WebinarAttendeePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more WebinarAttendees.
   * @param {WebinarAttendeeDeleteManyArgs} args - Arguments to filter WebinarAttendees to delete.
   * @example
   * // Delete a few WebinarAttendees
   * const { count } = await prisma.webinarAttendee.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends WebinarAttendeeDeleteManyArgs>(args?: Prisma.SelectSubset<T, WebinarAttendeeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more WebinarAttendees.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebinarAttendeeUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many WebinarAttendees
   * const webinarAttendee = await prisma.webinarAttendee.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends WebinarAttendeeUpdateManyArgs>(args: Prisma.SelectSubset<T, WebinarAttendeeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more WebinarAttendees and returns the data updated in the database.
   * @param {WebinarAttendeeUpdateManyAndReturnArgs} args - Arguments to update many WebinarAttendees.
   * @example
   * // Update many WebinarAttendees
   * const webinarAttendee = await prisma.webinarAttendee.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more WebinarAttendees and only return the `id`
   * const webinarAttendeeWithIdOnly = await prisma.webinarAttendee.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends WebinarAttendeeUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, WebinarAttendeeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WebinarAttendeePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one WebinarAttendee.
   * @param {WebinarAttendeeUpsertArgs} args - Arguments to update or create a WebinarAttendee.
   * @example
   * // Update or create a WebinarAttendee
   * const webinarAttendee = await prisma.webinarAttendee.upsert({
   *   create: {
   *     // ... data to create a WebinarAttendee
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the WebinarAttendee we want to update
   *   }
   * })
   */
  upsert<T extends WebinarAttendeeUpsertArgs>(args: Prisma.SelectSubset<T, WebinarAttendeeUpsertArgs<ExtArgs>>): Prisma.Prisma__WebinarAttendeeClient<runtime.Types.Result.GetResult<Prisma.$WebinarAttendeePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of WebinarAttendees.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebinarAttendeeCountArgs} args - Arguments to filter WebinarAttendees to count.
   * @example
   * // Count the number of WebinarAttendees
   * const count = await prisma.webinarAttendee.count({
   *   where: {
   *     // ... the filter for the WebinarAttendees we want to count
   *   }
   * })
  **/
  count<T extends WebinarAttendeeCountArgs>(
    args?: Prisma.Subset<T, WebinarAttendeeCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], WebinarAttendeeCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a WebinarAttendee.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebinarAttendeeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends WebinarAttendeeAggregateArgs>(args: Prisma.Subset<T, WebinarAttendeeAggregateArgs>): Prisma.PrismaPromise<GetWebinarAttendeeAggregateType<T>>

  /**
   * Group by WebinarAttendee.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebinarAttendeeGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends WebinarAttendeeGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: WebinarAttendeeGroupByArgs['orderBy'] }
      : { orderBy?: WebinarAttendeeGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, WebinarAttendeeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWebinarAttendeeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the WebinarAttendee model
 */
readonly fields: WebinarAttendeeFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for WebinarAttendee.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__WebinarAttendeeClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  webinar<T extends Prisma.WebinarDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.WebinarDefaultArgs<ExtArgs>>): Prisma.Prisma__WebinarClient<runtime.Types.Result.GetResult<Prisma.$WebinarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the WebinarAttendee model
 */
export interface WebinarAttendeeFieldRefs {
  readonly id: Prisma.FieldRef<"WebinarAttendee", 'String'>
  readonly webinarId: Prisma.FieldRef<"WebinarAttendee", 'String'>
  readonly userId: Prisma.FieldRef<"WebinarAttendee", 'String'>
  readonly status: Prisma.FieldRef<"WebinarAttendee", 'String'>
  readonly joinedAt: Prisma.FieldRef<"WebinarAttendee", 'DateTime'>
  readonly createdAt: Prisma.FieldRef<"WebinarAttendee", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"WebinarAttendee", 'DateTime'>
}
    

// Custom InputTypes
/**
 * WebinarAttendee findUnique
 */
export type WebinarAttendeeFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebinarAttendee
   */
  select?: Prisma.WebinarAttendeeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebinarAttendee
   */
  omit?: Prisma.WebinarAttendeeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarAttendeeInclude<ExtArgs> | null
  /**
   * Filter, which WebinarAttendee to fetch.
   */
  where: Prisma.WebinarAttendeeWhereUniqueInput
}

/**
 * WebinarAttendee findUniqueOrThrow
 */
export type WebinarAttendeeFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebinarAttendee
   */
  select?: Prisma.WebinarAttendeeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebinarAttendee
   */
  omit?: Prisma.WebinarAttendeeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarAttendeeInclude<ExtArgs> | null
  /**
   * Filter, which WebinarAttendee to fetch.
   */
  where: Prisma.WebinarAttendeeWhereUniqueInput
}

/**
 * WebinarAttendee findFirst
 */
export type WebinarAttendeeFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebinarAttendee
   */
  select?: Prisma.WebinarAttendeeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebinarAttendee
   */
  omit?: Prisma.WebinarAttendeeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarAttendeeInclude<ExtArgs> | null
  /**
   * Filter, which WebinarAttendee to fetch.
   */
  where?: Prisma.WebinarAttendeeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WebinarAttendees to fetch.
   */
  orderBy?: Prisma.WebinarAttendeeOrderByWithRelationInput | Prisma.WebinarAttendeeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for WebinarAttendees.
   */
  cursor?: Prisma.WebinarAttendeeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WebinarAttendees from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WebinarAttendees.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of WebinarAttendees.
   */
  distinct?: Prisma.WebinarAttendeeScalarFieldEnum | Prisma.WebinarAttendeeScalarFieldEnum[]
}

/**
 * WebinarAttendee findFirstOrThrow
 */
export type WebinarAttendeeFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebinarAttendee
   */
  select?: Prisma.WebinarAttendeeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebinarAttendee
   */
  omit?: Prisma.WebinarAttendeeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarAttendeeInclude<ExtArgs> | null
  /**
   * Filter, which WebinarAttendee to fetch.
   */
  where?: Prisma.WebinarAttendeeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WebinarAttendees to fetch.
   */
  orderBy?: Prisma.WebinarAttendeeOrderByWithRelationInput | Prisma.WebinarAttendeeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for WebinarAttendees.
   */
  cursor?: Prisma.WebinarAttendeeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WebinarAttendees from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WebinarAttendees.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of WebinarAttendees.
   */
  distinct?: Prisma.WebinarAttendeeScalarFieldEnum | Prisma.WebinarAttendeeScalarFieldEnum[]
}

/**
 * WebinarAttendee findMany
 */
export type WebinarAttendeeFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebinarAttendee
   */
  select?: Prisma.WebinarAttendeeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebinarAttendee
   */
  omit?: Prisma.WebinarAttendeeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarAttendeeInclude<ExtArgs> | null
  /**
   * Filter, which WebinarAttendees to fetch.
   */
  where?: Prisma.WebinarAttendeeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WebinarAttendees to fetch.
   */
  orderBy?: Prisma.WebinarAttendeeOrderByWithRelationInput | Prisma.WebinarAttendeeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing WebinarAttendees.
   */
  cursor?: Prisma.WebinarAttendeeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WebinarAttendees from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WebinarAttendees.
   */
  skip?: number
  distinct?: Prisma.WebinarAttendeeScalarFieldEnum | Prisma.WebinarAttendeeScalarFieldEnum[]
}

/**
 * WebinarAttendee create
 */
export type WebinarAttendeeCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebinarAttendee
   */
  select?: Prisma.WebinarAttendeeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebinarAttendee
   */
  omit?: Prisma.WebinarAttendeeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarAttendeeInclude<ExtArgs> | null
  /**
   * The data needed to create a WebinarAttendee.
   */
  data: Prisma.XOR<Prisma.WebinarAttendeeCreateInput, Prisma.WebinarAttendeeUncheckedCreateInput>
}

/**
 * WebinarAttendee createMany
 */
export type WebinarAttendeeCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many WebinarAttendees.
   */
  data: Prisma.WebinarAttendeeCreateManyInput | Prisma.WebinarAttendeeCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * WebinarAttendee createManyAndReturn
 */
export type WebinarAttendeeCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebinarAttendee
   */
  select?: Prisma.WebinarAttendeeSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the WebinarAttendee
   */
  omit?: Prisma.WebinarAttendeeOmit<ExtArgs> | null
  /**
   * The data used to create many WebinarAttendees.
   */
  data: Prisma.WebinarAttendeeCreateManyInput | Prisma.WebinarAttendeeCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarAttendeeIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * WebinarAttendee update
 */
export type WebinarAttendeeUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebinarAttendee
   */
  select?: Prisma.WebinarAttendeeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebinarAttendee
   */
  omit?: Prisma.WebinarAttendeeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarAttendeeInclude<ExtArgs> | null
  /**
   * The data needed to update a WebinarAttendee.
   */
  data: Prisma.XOR<Prisma.WebinarAttendeeUpdateInput, Prisma.WebinarAttendeeUncheckedUpdateInput>
  /**
   * Choose, which WebinarAttendee to update.
   */
  where: Prisma.WebinarAttendeeWhereUniqueInput
}

/**
 * WebinarAttendee updateMany
 */
export type WebinarAttendeeUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update WebinarAttendees.
   */
  data: Prisma.XOR<Prisma.WebinarAttendeeUpdateManyMutationInput, Prisma.WebinarAttendeeUncheckedUpdateManyInput>
  /**
   * Filter which WebinarAttendees to update
   */
  where?: Prisma.WebinarAttendeeWhereInput
  /**
   * Limit how many WebinarAttendees to update.
   */
  limit?: number
}

/**
 * WebinarAttendee updateManyAndReturn
 */
export type WebinarAttendeeUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebinarAttendee
   */
  select?: Prisma.WebinarAttendeeSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the WebinarAttendee
   */
  omit?: Prisma.WebinarAttendeeOmit<ExtArgs> | null
  /**
   * The data used to update WebinarAttendees.
   */
  data: Prisma.XOR<Prisma.WebinarAttendeeUpdateManyMutationInput, Prisma.WebinarAttendeeUncheckedUpdateManyInput>
  /**
   * Filter which WebinarAttendees to update
   */
  where?: Prisma.WebinarAttendeeWhereInput
  /**
   * Limit how many WebinarAttendees to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarAttendeeIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * WebinarAttendee upsert
 */
export type WebinarAttendeeUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebinarAttendee
   */
  select?: Prisma.WebinarAttendeeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebinarAttendee
   */
  omit?: Prisma.WebinarAttendeeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarAttendeeInclude<ExtArgs> | null
  /**
   * The filter to search for the WebinarAttendee to update in case it exists.
   */
  where: Prisma.WebinarAttendeeWhereUniqueInput
  /**
   * In case the WebinarAttendee found by the `where` argument doesn't exist, create a new WebinarAttendee with this data.
   */
  create: Prisma.XOR<Prisma.WebinarAttendeeCreateInput, Prisma.WebinarAttendeeUncheckedCreateInput>
  /**
   * In case the WebinarAttendee was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.WebinarAttendeeUpdateInput, Prisma.WebinarAttendeeUncheckedUpdateInput>
}

/**
 * WebinarAttendee delete
 */
export type WebinarAttendeeDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebinarAttendee
   */
  select?: Prisma.WebinarAttendeeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebinarAttendee
   */
  omit?: Prisma.WebinarAttendeeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarAttendeeInclude<ExtArgs> | null
  /**
   * Filter which WebinarAttendee to delete.
   */
  where: Prisma.WebinarAttendeeWhereUniqueInput
}

/**
 * WebinarAttendee deleteMany
 */
export type WebinarAttendeeDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which WebinarAttendees to delete
   */
  where?: Prisma.WebinarAttendeeWhereInput
  /**
   * Limit how many WebinarAttendees to delete.
   */
  limit?: number
}

/**
 * WebinarAttendee without action
 */
export type WebinarAttendeeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebinarAttendee
   */
  select?: Prisma.WebinarAttendeeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebinarAttendee
   */
  omit?: Prisma.WebinarAttendeeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebinarAttendeeInclude<ExtArgs> | null
}
